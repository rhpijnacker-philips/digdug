{
	"id": 0,
	"name": "@theintern/digdug",
	"kind": 0,
	"kindString": "Project",
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 1,
			"name": "BrowserStackTunnel",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "A BrowserStack tunnel.",
				"text": "The accessKey and username properties will be initialized using\nBROWSERSTACK_ACCESS_KEY and BROWSERSTACK_USERNAME.\n"
			},
			"children": [
				{
					"id": 2,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/BrowserStackTunnel.ts",
							"line": 57,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 3,
							"name": "new BrowserStackTunnel",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 4,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BrowserStackProperties"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1,
								"name": "default"
							},
							"overwrites": {
								"type": "reference",
								"id": 664,
								"name": "Tunnel.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 663,
						"name": "Tunnel.constructor"
					}
				},
				{
					"id": 89,
					"name": "__typeMap__",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true,
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/Evented.d.ts",
							"line": 3,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"name": "TunnelEvents"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 742,
						"name": "Tunnel.__typeMap__"
					}
				},
				{
					"id": 53,
					"name": "_handle",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 128,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "Handle"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 685,
						"name": "Tunnel._handle"
					}
				},
				{
					"id": 54,
					"name": "_process",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 129,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "ChildProcess"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 686,
						"name": "Tunnel._process"
					}
				},
				{
					"id": 51,
					"name": "_startTask",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 126,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "CancellablePromise"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 683,
						"name": "Tunnel._startTask"
					}
				},
				{
					"id": 55,
					"name": "_state",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 130,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "stopped"
							},
							{
								"type": "literal",
								"value": "starting"
							},
							{
								"type": "literal",
								"value": "running"
							},
							{
								"type": "literal",
								"value": "stopping"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 687,
						"name": "Tunnel._state"
					}
				},
				{
					"id": 52,
					"name": "_stopTask",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 127,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								],
								"name": "Promise"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 684,
						"name": "Tunnel._stopTask"
					}
				},
				{
					"id": 38,
					"name": "accessKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The tunnel access key. This will be initialized with a tunnel-specific\nenvironment variable if not specified."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 37,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 667,
						"name": "Tunnel.accessKey"
					},
					"implementationOf": {
						"type": "reference",
						"name": "BrowserStackProperties.accessKey"
					}
				},
				{
					"id": 40,
					"name": "architecture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The architecture the tunnel will run against. This information is\nautomatically retrieved for the current system at runtime."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 49,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 669,
						"name": "Tunnel.architecture"
					},
					"implementationOf": {
						"type": "reference",
						"name": "BrowserStackProperties.architecture"
					}
				},
				{
					"id": 5,
					"name": "automateOnly",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Whether or not to start the tunnel with only WebDriver support. Setting\nthis value to `false` is not supported."
					},
					"sources": [
						{
							"fileName": "src/BrowserStackTunnel.ts",
							"line": 28,
							"character": 2
						}
					],
					"type": {
						"type": "literal",
						"value": true
					},
					"implementationOf": {
						"type": "reference",
						"name": "BrowserStackProperties.automateOnly"
					}
				},
				{
					"id": 41,
					"name": "directory",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The directory where the tunnel software will be extracted. If the\ndirectory does not exist, it will be created. This value is set by the\ntunnel subclasses."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 62,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 671,
						"name": "Tunnel.directory"
					},
					"implementationOf": {
						"type": "reference",
						"name": "BrowserStackProperties.directory"
					}
				},
				{
					"id": 6,
					"name": "environmentUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The URL of a service that provides a list of environments supported by\nthe tunnel."
					},
					"sources": [
						{
							"fileName": "src/BrowserStackTunnel.ts",
							"line": 34,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"id": 666,
						"name": "Tunnel.environmentUrl"
					},
					"implementationOf": {
						"type": "reference",
						"name": "BrowserStackProperties.environmentUrl"
					}
				},
				{
					"id": 10,
					"name": "forceLocal",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "If true, route all traffic via the local machine."
					},
					"sources": [
						{
							"fileName": "src/BrowserStackTunnel.ts",
							"line": 55,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"implementationOf": {
						"type": "reference",
						"name": "BrowserStackProperties.forceLocal"
					}
				},
				{
					"id": 42,
					"name": "hostname",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The host on which a WebDriver client can access the service provided by\nthe tunnel. This may or may not be the host where the tunnel application\nis running."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 75,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 673,
						"name": "Tunnel.hostname"
					},
					"implementationOf": {
						"type": "reference",
						"name": "BrowserStackProperties.hostname"
					}
				},
				{
					"id": 7,
					"name": "killOtherTunnels",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "If true, any other tunnels running on the account will be killed when\nthe tunnel is started."
					},
					"sources": [
						{
							"fileName": "src/BrowserStackTunnel.ts",
							"line": 40,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"implementationOf": {
						"type": "reference",
						"name": "BrowserStackProperties.killOtherTunnels"
					}
				},
				{
					"id": 90,
					"name": "listenersMap",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/Evented.d.ts",
							"line": 4,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "reference",
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "string"
												}
											],
											"name": "EventObject"
										}
									],
									"name": "EventedCallback"
								}
							}
						],
						"name": "Map"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 743,
						"name": "Tunnel.listenersMap"
					}
				},
				{
					"id": 43,
					"name": "pathname",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The path that a WebDriver client should use to access the service\nprovided by the tunnel."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 81,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 674,
						"name": "Tunnel.pathname"
					},
					"implementationOf": {
						"type": "reference",
						"name": "BrowserStackProperties.pathname"
					}
				},
				{
					"id": 44,
					"name": "platform",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The operating system the tunnel will run on. This information is\nautomatically retrieved for the current system at runtime."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 87,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 675,
						"name": "Tunnel.platform"
					},
					"implementationOf": {
						"type": "reference",
						"name": "BrowserStackProperties.platform"
					}
				},
				{
					"id": 45,
					"name": "port",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The local port where the WebDriver server should be exposed by the\ntunnel. This is typed as a string for Url compatibility, but should be a\nnumber."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 94,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 676,
						"name": "Tunnel.port"
					},
					"implementationOf": {
						"type": "reference",
						"name": "BrowserStackProperties.port"
					}
				},
				{
					"id": 46,
					"name": "protocol",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The protocol (e.g., 'http') that a WebDriver client should use to access\nthe service provided by the tunnel."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 100,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 677,
						"name": "Tunnel.protocol"
					},
					"implementationOf": {
						"type": "reference",
						"name": "BrowserStackProperties.protocol"
					}
				},
				{
					"id": 47,
					"name": "proxy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The URL of a proxy server for the tunnel to go through. Only the\nhostname, port, and auth are used."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 106,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 678,
						"name": "Tunnel.proxy"
					},
					"implementationOf": {
						"type": "reference",
						"name": "BrowserStackProperties.proxy"
					}
				},
				{
					"id": 8,
					"name": "servers",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "A list of server URLs that should be proxied by the tunnel. Only the\nhostname, port, and protocol are used."
					},
					"sources": [
						{
							"fileName": "src/BrowserStackTunnel.ts",
							"line": 46,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "reference",
									"name": "Url"
								}
							]
						}
					},
					"implementationOf": {
						"type": "reference",
						"name": "BrowserStackProperties.servers"
					}
				},
				{
					"id": 9,
					"name": "skipServerValidation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Skip verification that the proxied servers are online and responding at\nthe time the tunnel starts."
					},
					"sources": [
						{
							"fileName": "src/BrowserStackTunnel.ts",
							"line": 52,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"implementationOf": {
						"type": "reference",
						"name": "BrowserStackProperties.skipServerValidation"
					}
				},
				{
					"id": 49,
					"name": "tunnelId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "A unique identifier for the newly created tunnel."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 118,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 680,
						"name": "Tunnel.tunnelId"
					},
					"implementationOf": {
						"type": "reference",
						"name": "BrowserStackProperties.tunnelId"
					}
				},
				{
					"id": 48,
					"name": "tunnelProxy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The URL of a proxy server for the tunnel to go through. Only the\nhostname, port, and auth are used.",
						"text": "This overrides the `proxy` configuration allowing independent\nconfiguration for the Tunnel binary process only.\n"
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 115,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 679,
						"name": "Tunnel.tunnelProxy"
					},
					"implementationOf": {
						"type": "reference",
						"name": "BrowserStackProperties.tunnelProxy"
					}
				},
				{
					"id": 39,
					"name": "username",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The tunnel username. This will be initialized with a tunnel-specific\nenvironment variable if not specified."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 43,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 668,
						"name": "Tunnel.username"
					},
					"implementationOf": {
						"type": "reference",
						"name": "BrowserStackProperties.username"
					}
				},
				{
					"id": 50,
					"name": "verbose",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Whether or not to tell the tunnel to provide verbose logging output."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 124,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 682,
						"name": "Tunnel.verbose"
					},
					"implementationOf": {
						"type": "reference",
						"name": "BrowserStackProperties.verbose"
					}
				},
				{
					"id": 11,
					"name": "auth",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "An HTTP authorization string to use when initiating connections to the\ntunnel. This value of this property is defined by Tunnel subclasses."
					},
					"sources": [
						{
							"fileName": "src/BrowserStackTunnel.ts",
							"line": 80,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 12,
							"name": "auth",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 670,
						"name": "Tunnel.auth"
					}
				},
				{
					"id": 56,
					"name": "clientUrl",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "The URL that a WebDriver client should used to interact with this\nservice."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 154,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 57,
							"name": "clientUrl",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "The URL that a WebDriver client should used to interact with this\nservice."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 688,
						"name": "Tunnel.clientUrl"
					}
				},
				{
					"id": 13,
					"name": "executable",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "The executable to spawn in order to create a tunnel. This value is set\nby the tunnel subclasses."
					},
					"sources": [
						{
							"fileName": "src/BrowserStackTunnel.ts",
							"line": 85,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 14,
							"name": "executable",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 672,
						"name": "Tunnel.executable"
					}
				},
				{
					"id": 15,
					"name": "extraCapabilities",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "A map of additional capabilities that need to be sent to the provider\nwhen a new session is being created."
					},
					"sources": [
						{
							"fileName": "src/BrowserStackTunnel.ts",
							"line": 92,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 16,
							"name": "extraCapabilities",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Object"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 690,
						"name": "Tunnel.extraCapabilities"
					}
				},
				{
					"id": 58,
					"name": "isDownloaded",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Whether or not the tunnel software has already been downloaded."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 169,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 59,
							"name": "isDownloaded",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Whether or not the tunnel software has already been downloaded."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 692,
						"name": "Tunnel.isDownloaded"
					}
				},
				{
					"id": 60,
					"name": "isRunning",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Whether or not the tunnel is currently running."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 176,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 61,
							"name": "isRunning",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Whether or not the tunnel is currently running."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 694,
						"name": "Tunnel.isRunning"
					}
				},
				{
					"id": 62,
					"name": "isStarting",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Whether or not the tunnel is currently starting up."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 183,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 63,
							"name": "isStarting",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Whether or not the tunnel is currently starting up."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 696,
						"name": "Tunnel.isStarting"
					}
				},
				{
					"id": 64,
					"name": "isStopping",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Whether or not the tunnel is currently stopping."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 190,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 65,
							"name": "isStopping",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Whether or not the tunnel is currently stopping."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 698,
						"name": "Tunnel.isStopping"
					}
				},
				{
					"id": 17,
					"name": "url",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "The URL where the tunnel software can be downloaded."
					},
					"sources": [
						{
							"fileName": "src/BrowserStackTunnel.ts",
							"line": 105,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 18,
							"name": "url",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 681,
						"name": "Tunnel.url"
					}
				},
				{
					"id": 75,
					"name": "_downloadFile",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 373,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 76,
							"name": "_downloadFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 77,
									"name": "url",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 78,
									"name": "proxy",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 79,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "DownloadProperties"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 714,
								"name": "Tunnel._downloadFile"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 713,
						"name": "Tunnel._downloadFile"
					}
				},
				{
					"id": 23,
					"name": "_makeArgs",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/BrowserStackTunnel.ts",
							"line": 138,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 24,
							"name": "_makeArgs",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates the list of command-line arguments to be passed to the spawned\ntunnel. Implementations should override this method to provide the\nappropriate command-line arguments.",
								"text": "Arguments passed to [[Tunnel._makeChild]] will be passed as-is to this\nmethod.\n"
							},
							"parameters": [
								{
									"id": 25,
									"name": "_values",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 719,
								"name": "Tunnel._makeArgs"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 718,
						"name": "Tunnel._makeArgs"
					}
				},
				{
					"id": 80,
					"name": "_makeChild",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 445,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 81,
							"name": "_makeChild",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a newly spawned child process for the tunnel software.\nImplementations should call this method to create the tunnel process.",
								"text": "Arguments passed to this method will be passed as-is to\n[[Tunnel._makeArgs]] and [[Tunnel._makeOptions]].\n",
								"returns": "An object containing a newly spawned Process and a Deferred that\nwill be resolved once the tunnel has started successfully.\n"
							},
							"parameters": [
								{
									"id": 82,
									"name": "executor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ChildExecutor"
									}
								},
								{
									"id": 83,
									"name": "values",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 722,
								"name": "Tunnel._makeChild"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 721,
						"name": "Tunnel._makeChild"
					}
				},
				{
					"id": 84,
					"name": "_makeOptions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 546,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 85,
							"name": "_makeOptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates the set of options to use when spawning the tunnel process.\nImplementations should override this method to provide the appropriate\noptions for the tunnel software.",
								"text": "Arguments passed to [[Tunnel._makeChild]] will be passed as-is to this\nmethod.\n",
								"returns": "A set of options matching those provided to Node.js\n`child_process.spawn`.\n"
							},
							"parameters": [
								{
									"id": 86,
									"name": "_values",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 87,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 88,
											"name": "env",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ProcessEnv"
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												88
											]
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 726,
								"name": "Tunnel._makeOptions"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 725,
						"name": "Tunnel._makeOptions"
					}
				},
				{
					"id": 35,
					"name": "_normalizeEnvironment",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/BrowserStackTunnel.ts",
							"line": 288,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 36,
							"name": "_normalizeEnvironment",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Attempt to normalize a BrowserStack described environment with the\nstandard Selenium capabilities",
								"text": "BrowserStack returns a list of environments that looks like:\n\n{\n    \"browser\": \"opera\",\n    \"os_version\": \"Lion\",\n    \"browser_version\":\"12.15\",\n    \"device\": null,\n    \"os\": \"OS X\"\n}\n",
								"returns": "a normalized descriptor\n"
							},
							"parameters": [
								{
									"id": 37,
									"name": "environment",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "a BrowserStack environment descriptor"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "NormalizedEnvironment"
							},
							"overwrites": {
								"type": "reference",
								"id": 731,
								"name": "Tunnel._normalizeEnvironment"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 730,
						"name": "Tunnel._normalizeEnvironment"
					}
				},
				{
					"id": 19,
					"name": "_postDownloadFile",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/BrowserStackTunnel.ts",
							"line": 128,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 20,
							"name": "_postDownloadFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Called with the response after a file download has completed"
							},
							"parameters": [
								{
									"id": 21,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								},
								{
									"id": 22,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "DownloadProperties"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise"
							},
							"overwrites": {
								"type": "reference",
								"id": 734,
								"name": "Tunnel._postDownloadFile"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 733,
						"name": "Tunnel._postDownloadFile"
					}
				},
				{
					"id": 30,
					"name": "_start",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/BrowserStackTunnel.ts",
							"line": 207,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 31,
							"name": "_start",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "This method provides the implementation that actually starts the tunnel\nand any other logic for emitting events on the Tunnel based on data\npassed by the tunnel software.",
								"text": "The default implementation that assumes the tunnel is ready for use once\nthe child process has written to `stdout` or `stderr`. This method should\nbe reimplemented by other tunnel launchers to implement correct launch\ndetection logic.\n"
							},
							"parameters": [
								{
									"id": 32,
									"name": "executor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ChildExecutor"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "CancellablePromise"
							},
							"overwrites": {
								"type": "reference",
								"id": 738,
								"name": "Tunnel._start"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 737,
						"name": "Tunnel._start"
					}
				},
				{
					"id": 33,
					"name": "_stop",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/BrowserStackTunnel.ts",
							"line": 242,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 34,
							"name": "_stop",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "This method provides the implementation that actually stops the tunnel.",
								"text": "The default implementation that assumes the tunnel has been closed once\nthe child process has exited. This method should be reimplemented by\nother tunnel launchers to implement correct shutdown logic, if necessary.\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise"
							},
							"overwrites": {
								"type": "reference",
								"id": 741,
								"name": "Tunnel._stop"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 740,
						"name": "Tunnel._stop"
					}
				},
				{
					"id": 108,
					"name": "destroy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/Evented.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 109,
							"name": "destroy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 762,
								"name": "Tunnel.destroy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 761,
						"name": "Tunnel.destroy"
					}
				},
				{
					"id": 66,
					"name": "download",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 207,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 67,
							"name": "download",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Downloads and extracts the tunnel software if it is not already\ndownloaded.",
								"text": "This method can be extended by implementations to perform any necessary\npost-processing, such as setting appropriate file permissions on the\ndownloaded executable.\n",
								"returns": "A promise that resolves once the download and extraction process\nhas completed.\n"
							},
							"parameters": [
								{
									"id": 68,
									"name": "forceDownload",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Force downloading the software even if it already\nhas been downloaded."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 701,
								"name": "Tunnel.download"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 700,
						"name": "Tunnel.download"
					}
				},
				{
					"id": 91,
					"name": "emit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/Evented.d.ts",
							"line": 7,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 92,
							"name": "emit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 93,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 94,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"name": "K"
										},
										"objectType": {
											"type": "reference",
											"name": "TunnelEvents"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 745,
								"name": "Tunnel.emit"
							}
						},
						{
							"id": 95,
							"name": "emit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 96,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "EventObject"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 748,
								"name": "Tunnel.emit"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 744,
						"name": "Tunnel.emit"
					}
				},
				{
					"id": 69,
					"name": "getEnvironments",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 231,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 70,
							"name": "getEnvironments",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get a list of environments available on the service.",
								"text": "This method should be overridden and use a specific implementation that\nreturns normalized environments from the service. E.g.\n\n```js\n{\n    browserName: 'firefox',\n    version: '12',\n    platform: 'windows',\n    descriptor: { <original returned environment> }\n}\n```\n",
								"returns": "An object containing the response and helper functions\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "NormalizedEnvironment"
										}
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 704,
								"name": "Tunnel.getEnvironments"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 703,
						"name": "Tunnel.getEnvironments"
					}
				},
				{
					"id": 97,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/Evented.d.ts",
							"line": 9,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 98,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 99,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 100,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "K"
									}
								},
								{
									"id": 101,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "K"
											},
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"name": "K"
												},
												"objectType": {
													"type": "reference",
													"name": "TunnelEvents"
												}
											}
										],
										"name": "EventedCallbackOrArray"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Handle"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 751,
								"name": "Tunnel.on"
							}
						},
						{
							"id": 102,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 103,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 104,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "EventObject"
											}
										],
										"name": "EventedCallbackOrArray"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Handle"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 755,
								"name": "Tunnel.on"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 750,
						"name": "Tunnel.on"
					}
				},
				{
					"id": 105,
					"name": "own",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/Evented.d.ts",
							"line": 11,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 106,
							"name": "own",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 107,
									"name": "handles",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Handle"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Handle"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Handle"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 759,
								"name": "Tunnel.own"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 758,
						"name": "Tunnel.own"
					}
				},
				{
					"id": 26,
					"name": "sendJobState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/BrowserStackTunnel.ts",
							"line": 180,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 27,
							"name": "sendJobState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sends information about a job to the tunnel provider."
							},
							"parameters": [
								{
									"id": 28,
									"name": "jobId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 29,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "JobState"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							},
							"overwrites": {
								"type": "reference",
								"id": 706,
								"name": "Tunnel.sendJobState"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 705,
						"name": "Tunnel.sendJobState"
					}
				},
				{
					"id": 71,
					"name": "start",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 277,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 72,
							"name": "start",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Starts the tunnel, automatically downloading dependencies if necessary.",
								"returns": "A promise that resolves once the tunnel has been established.\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 710,
								"name": "Tunnel.start"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 709,
						"name": "Tunnel.start"
					}
				},
				{
					"id": 73,
					"name": "stop",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 334,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 74,
							"name": "stop",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Stops the tunnel.",
								"returns": "A promise that resolves to the exit code for the tunnel once it\nhas been terminated.\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								],
								"name": "Promise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 712,
								"name": "Tunnel.stop"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 711,
						"name": "Tunnel.stop"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						2
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						89,
						53,
						54,
						51,
						55,
						52,
						38,
						40,
						5,
						41,
						6,
						10,
						42,
						7,
						90,
						43,
						44,
						45,
						46,
						47,
						8,
						9,
						49,
						48,
						39,
						50
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						11,
						56,
						13,
						15,
						58,
						60,
						62,
						64,
						17
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						75,
						23,
						80,
						84,
						35,
						19,
						30,
						33,
						108,
						66,
						91,
						69,
						97,
						105,
						26,
						71,
						73
					]
				}
			],
			"sources": [
				{
					"fileName": "src/BrowserStackTunnel.ts",
					"line": 20,
					"character": 21
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 662,
					"name": "Tunnel"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "BrowserStackProperties"
				}
			]
		},
		{
			"id": 110,
			"name": "CrossBrowserTestingTunnel",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "A CrossBrowserTesting tunnel.",
				"text": "This tunnel requires some non-standard configuration options (vs the other\ntunnels):\n\n1. The capabilities must include the username, API key, browser_api_name, and\n   os_api_name properties\n2. The Intern proxyUrl must use 'local' instead of 'localhost'\n\nAn Intern config using this tunnel might be look like:\n\n```js\n{\n    \"serverUrl\": \"http://local:9000\",\n    \"tunnel\": \"cbt\",\n    \"environments\": [\n        {\n            \"browserName\": \"chrome\",\n            \"os_api_name\": \"Win10\",\n            \"browser_api_name\": \"Chrome52\"\n        }\n    ],\n\t   // Other Intern config options...\n}\n```\n\nThe username and accessKey properties will be initialized using CBT_USERNAME\nand CBT_APIKEY.\n"
			},
			"children": [
				{
					"id": 111,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/CrossBrowserTestingTunnel.ts",
							"line": 58,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 112,
							"name": "new CrossBrowserTestingTunnel",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 113,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "CrossBrowserTestingProperties"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 110,
								"name": "default"
							},
							"overwrites": {
								"type": "reference",
								"id": 664,
								"name": "Tunnel.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 663,
						"name": "Tunnel.constructor"
					}
				},
				{
					"id": 195,
					"name": "__typeMap__",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true,
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/Evented.d.ts",
							"line": 3,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"name": "TunnelEvents"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 742,
						"name": "Tunnel.__typeMap__"
					}
				},
				{
					"id": 158,
					"name": "_handle",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 128,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "Handle"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 685,
						"name": "Tunnel._handle"
					}
				},
				{
					"id": 159,
					"name": "_process",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 129,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "ChildProcess"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 686,
						"name": "Tunnel._process"
					}
				},
				{
					"id": 156,
					"name": "_startTask",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 126,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "CancellablePromise"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 683,
						"name": "Tunnel._startTask"
					}
				},
				{
					"id": 160,
					"name": "_state",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 130,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "stopped"
							},
							{
								"type": "literal",
								"value": "starting"
							},
							{
								"type": "literal",
								"value": "running"
							},
							{
								"type": "literal",
								"value": "stopping"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 687,
						"name": "Tunnel._state"
					}
				},
				{
					"id": 157,
					"name": "_stopTask",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 127,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								],
								"name": "Promise"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 684,
						"name": "Tunnel._stopTask"
					}
				},
				{
					"id": 141,
					"name": "accessKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The tunnel access key. This will be initialized with a tunnel-specific\nenvironment variable if not specified."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 37,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 667,
						"name": "Tunnel.accessKey"
					},
					"implementationOf": {
						"type": "reference",
						"name": "CrossBrowserTestingProperties.accessKey"
					}
				},
				{
					"id": 143,
					"name": "architecture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The architecture the tunnel will run against. This information is\nautomatically retrieved for the current system at runtime."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 49,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 669,
						"name": "Tunnel.architecture"
					},
					"implementationOf": {
						"type": "reference",
						"name": "CrossBrowserTestingProperties.architecture"
					}
				},
				{
					"id": 114,
					"name": "cbtVersion",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The version of the cbt_tunnels package to use"
					},
					"sources": [
						{
							"fileName": "src/CrossBrowserTestingTunnel.ts",
							"line": 56,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"implementationOf": {
						"type": "reference",
						"name": "CrossBrowserTestingProperties.cbtVersion"
					}
				},
				{
					"id": 144,
					"name": "directory",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The directory where the tunnel software will be extracted. If the\ndirectory does not exist, it will be created. This value is set by the\ntunnel subclasses."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 62,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 671,
						"name": "Tunnel.directory"
					},
					"implementationOf": {
						"type": "reference",
						"name": "CrossBrowserTestingProperties.directory"
					}
				},
				{
					"id": 140,
					"name": "environmentUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The URL of a service that provides a list of environments supported by\nthe tunnel."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 31,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 666,
						"name": "Tunnel.environmentUrl"
					}
				},
				{
					"id": 145,
					"name": "executable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The executable to spawn in order to create a tunnel. This value is set\nby the tunnel subclasses."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 68,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 672,
						"name": "Tunnel.executable"
					},
					"implementationOf": {
						"type": "reference",
						"name": "CrossBrowserTestingProperties.executable"
					}
				},
				{
					"id": 146,
					"name": "hostname",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The host on which a WebDriver client can access the service provided by\nthe tunnel. This may or may not be the host where the tunnel application\nis running."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 75,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 673,
						"name": "Tunnel.hostname"
					},
					"implementationOf": {
						"type": "reference",
						"name": "CrossBrowserTestingProperties.hostname"
					}
				},
				{
					"id": 196,
					"name": "listenersMap",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/Evented.d.ts",
							"line": 4,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "reference",
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "string"
												}
											],
											"name": "EventObject"
										}
									],
									"name": "EventedCallback"
								}
							}
						],
						"name": "Map"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 743,
						"name": "Tunnel.listenersMap"
					}
				},
				{
					"id": 147,
					"name": "pathname",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The path that a WebDriver client should use to access the service\nprovided by the tunnel."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 81,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 674,
						"name": "Tunnel.pathname"
					},
					"implementationOf": {
						"type": "reference",
						"name": "CrossBrowserTestingProperties.pathname"
					}
				},
				{
					"id": 148,
					"name": "platform",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The operating system the tunnel will run on. This information is\nautomatically retrieved for the current system at runtime."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 87,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 675,
						"name": "Tunnel.platform"
					},
					"implementationOf": {
						"type": "reference",
						"name": "CrossBrowserTestingProperties.platform"
					}
				},
				{
					"id": 149,
					"name": "port",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The local port where the WebDriver server should be exposed by the\ntunnel. This is typed as a string for Url compatibility, but should be a\nnumber."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 94,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 676,
						"name": "Tunnel.port"
					},
					"implementationOf": {
						"type": "reference",
						"name": "CrossBrowserTestingProperties.port"
					}
				},
				{
					"id": 150,
					"name": "protocol",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The protocol (e.g., 'http') that a WebDriver client should use to access\nthe service provided by the tunnel."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 100,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 677,
						"name": "Tunnel.protocol"
					},
					"implementationOf": {
						"type": "reference",
						"name": "CrossBrowserTestingProperties.protocol"
					}
				},
				{
					"id": 151,
					"name": "proxy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The URL of a proxy server for the tunnel to go through. Only the\nhostname, port, and auth are used."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 106,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 678,
						"name": "Tunnel.proxy"
					},
					"implementationOf": {
						"type": "reference",
						"name": "CrossBrowserTestingProperties.proxy"
					}
				},
				{
					"id": 153,
					"name": "tunnelId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "A unique identifier for the newly created tunnel."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 118,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 680,
						"name": "Tunnel.tunnelId"
					},
					"implementationOf": {
						"type": "reference",
						"name": "CrossBrowserTestingProperties.tunnelId"
					}
				},
				{
					"id": 152,
					"name": "tunnelProxy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The URL of a proxy server for the tunnel to go through. Only the\nhostname, port, and auth are used.",
						"text": "This overrides the `proxy` configuration allowing independent\nconfiguration for the Tunnel binary process only.\n"
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 115,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 679,
						"name": "Tunnel.tunnelProxy"
					},
					"implementationOf": {
						"type": "reference",
						"name": "CrossBrowserTestingProperties.tunnelProxy"
					}
				},
				{
					"id": 154,
					"name": "url",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The URL where the tunnel software can be downloaded."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 121,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 681,
						"name": "Tunnel.url"
					},
					"implementationOf": {
						"type": "reference",
						"name": "CrossBrowserTestingProperties.url"
					}
				},
				{
					"id": 142,
					"name": "username",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The tunnel username. This will be initialized with a tunnel-specific\nenvironment variable if not specified."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 43,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 668,
						"name": "Tunnel.username"
					},
					"implementationOf": {
						"type": "reference",
						"name": "CrossBrowserTestingProperties.username"
					}
				},
				{
					"id": 155,
					"name": "verbose",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Whether or not to tell the tunnel to provide verbose logging output."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 124,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 682,
						"name": "Tunnel.verbose"
					},
					"implementationOf": {
						"type": "reference",
						"name": "CrossBrowserTestingProperties.verbose"
					}
				},
				{
					"id": 115,
					"name": "auth",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "An HTTP authorization string to use when initiating connections to the\ntunnel. This value of this property is defined by Tunnel subclasses."
					},
					"sources": [
						{
							"fileName": "src/CrossBrowserTestingTunnel.ts",
							"line": 77,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 116,
							"name": "auth",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 670,
						"name": "Tunnel.auth"
					}
				},
				{
					"id": 161,
					"name": "clientUrl",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "The URL that a WebDriver client should used to interact with this\nservice."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 154,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 162,
							"name": "clientUrl",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "The URL that a WebDriver client should used to interact with this\nservice."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 688,
						"name": "Tunnel.clientUrl"
					}
				},
				{
					"id": 117,
					"name": "extraCapabilities",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "A map of additional capabilities that need to be sent to the provider\nwhen a new session is being created."
					},
					"sources": [
						{
							"fileName": "src/CrossBrowserTestingTunnel.ts",
							"line": 81,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 118,
							"name": "extraCapabilities",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 119,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 121,
											"name": "password",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 120,
											"name": "username",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												121,
												120
											]
										}
									]
								}
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 690,
						"name": "Tunnel.extraCapabilities"
					}
				},
				{
					"id": 122,
					"name": "isDownloaded",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Whether or not the tunnel software has already been downloaded."
					},
					"sources": [
						{
							"fileName": "src/CrossBrowserTestingTunnel.ts",
							"line": 88,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 123,
							"name": "isDownloaded",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 692,
						"name": "Tunnel.isDownloaded"
					}
				},
				{
					"id": 163,
					"name": "isRunning",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Whether or not the tunnel is currently running."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 176,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 164,
							"name": "isRunning",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Whether or not the tunnel is currently running."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 694,
						"name": "Tunnel.isRunning"
					}
				},
				{
					"id": 165,
					"name": "isStarting",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Whether or not the tunnel is currently starting up."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 183,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 166,
							"name": "isStarting",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Whether or not the tunnel is currently starting up."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 696,
						"name": "Tunnel.isStarting"
					}
				},
				{
					"id": 167,
					"name": "isStopping",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Whether or not the tunnel is currently stopping."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 190,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 168,
							"name": "isStopping",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Whether or not the tunnel is currently stopping."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 698,
						"name": "Tunnel.isStopping"
					}
				},
				{
					"id": 175,
					"name": "_downloadFile",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 373,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 176,
							"name": "_downloadFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 177,
									"name": "url",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 178,
									"name": "proxy",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 179,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "DownloadProperties"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 714,
								"name": "Tunnel._downloadFile"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 713,
						"name": "Tunnel._downloadFile"
					}
				},
				{
					"id": 127,
					"name": "_makeArgs",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/CrossBrowserTestingTunnel.ts",
							"line": 116,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 128,
							"name": "_makeArgs",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates the list of command-line arguments to be passed to the spawned\ntunnel. Implementations should override this method to provide the\nappropriate command-line arguments.",
								"text": "Arguments passed to [[Tunnel._makeChild]] will be passed as-is to this\nmethod.\n"
							},
							"parameters": [
								{
									"id": 129,
									"name": "readyFile",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 719,
								"name": "Tunnel._makeArgs"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 718,
						"name": "Tunnel._makeArgs"
					}
				},
				{
					"id": 180,
					"name": "_makeChild",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 445,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 181,
							"name": "_makeChild",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a newly spawned child process for the tunnel software.\nImplementations should call this method to create the tunnel process.",
								"text": "Arguments passed to this method will be passed as-is to\n[[Tunnel._makeArgs]] and [[Tunnel._makeOptions]].\n",
								"returns": "An object containing a newly spawned Process and a Deferred that\nwill be resolved once the tunnel has started successfully.\n"
							},
							"parameters": [
								{
									"id": 182,
									"name": "executor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ChildExecutor"
									}
								},
								{
									"id": 183,
									"name": "values",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 722,
								"name": "Tunnel._makeChild"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 721,
						"name": "Tunnel._makeChild"
					}
				},
				{
					"id": 184,
					"name": "_makeOptions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 546,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 185,
							"name": "_makeOptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates the set of options to use when spawning the tunnel process.\nImplementations should override this method to provide the appropriate\noptions for the tunnel software.",
								"text": "Arguments passed to [[Tunnel._makeChild]] will be passed as-is to this\nmethod.\n",
								"returns": "A set of options matching those provided to Node.js\n`child_process.spawn`.\n"
							},
							"parameters": [
								{
									"id": 186,
									"name": "_values",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 187,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 188,
											"name": "env",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ProcessEnv"
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												188
											]
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 726,
								"name": "Tunnel._makeOptions"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 725,
						"name": "Tunnel._makeOptions"
					}
				},
				{
					"id": 137,
					"name": "_normalizeEnvironment",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/CrossBrowserTestingTunnel.ts",
							"line": 230,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 138,
							"name": "_normalizeEnvironment",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Attempt to normalize a TestingBot described environment with the standard\nSelenium capabilities",
								"text": "TestingBot returns a list of environments that looks like:\n\n{\n    \"selenium_name\": \"Chrome36\",\n    \"name\": \"googlechrome\",\n    \"platform\": \"CAPITAN\",\n    \"version\":\"36\"\n}\n",
								"returns": "a normalized descriptor\n"
							},
							"parameters": [
								{
									"id": 139,
									"name": "environment",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "a TestingBot environment descriptor"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "NormalizedEnvironment"
							},
							"overwrites": {
								"type": "reference",
								"id": 731,
								"name": "Tunnel._normalizeEnvironment"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 730,
						"name": "Tunnel._normalizeEnvironment"
					}
				},
				{
					"id": 189,
					"name": "_postDownloadFile",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 564,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 190,
							"name": "_postDownloadFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Called with the response after a file download has completed"
							},
							"parameters": [
								{
									"id": 191,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								},
								{
									"id": 192,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "DownloadProperties"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 734,
								"name": "Tunnel._postDownloadFile"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 733,
						"name": "Tunnel._postDownloadFile"
					}
				},
				{
					"id": 134,
					"name": "_start",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/CrossBrowserTestingTunnel.ts",
							"line": 172,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 135,
							"name": "_start",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "This method provides the implementation that actually starts the tunnel\nand any other logic for emitting events on the Tunnel based on data\npassed by the tunnel software.",
								"text": "The default implementation that assumes the tunnel is ready for use once\nthe child process has written to `stdout` or `stderr`. This method should\nbe reimplemented by other tunnel launchers to implement correct launch\ndetection logic.\n"
							},
							"parameters": [
								{
									"id": 136,
									"name": "executor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ChildExecutor"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "CancellablePromise"
							},
							"overwrites": {
								"type": "reference",
								"id": 738,
								"name": "Tunnel._start"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 737,
						"name": "Tunnel._start"
					}
				},
				{
					"id": 193,
					"name": "_stop",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 622,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 194,
							"name": "_stop",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "This method provides the implementation that actually stops the tunnel.",
								"text": "The default implementation that assumes the tunnel has been closed once\nthe child process has exited. This method should be reimplemented by\nother tunnel launchers to implement correct shutdown logic, if necessary.\n",
								"returns": "A promise that resolves once the tunnel has shut down.\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								],
								"name": "Promise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 741,
								"name": "Tunnel._stop"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 740,
						"name": "Tunnel._stop"
					}
				},
				{
					"id": 214,
					"name": "destroy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/Evented.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 215,
							"name": "destroy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 762,
								"name": "Tunnel.destroy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 761,
						"name": "Tunnel.destroy"
					}
				},
				{
					"id": 124,
					"name": "download",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/CrossBrowserTestingTunnel.ts",
							"line": 97,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 125,
							"name": "download",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Downloads and extracts the tunnel software if it is not already\ndownloaded.",
								"text": "This method can be extended by implementations to perform any necessary\npost-processing, such as setting appropriate file permissions on the\ndownloaded executable.\n"
							},
							"parameters": [
								{
									"id": 126,
									"name": "forceDownload",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							},
							"overwrites": {
								"type": "reference",
								"id": 701,
								"name": "Tunnel.download"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 700,
						"name": "Tunnel.download"
					}
				},
				{
					"id": 197,
					"name": "emit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/Evented.d.ts",
							"line": 7,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 198,
							"name": "emit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 199,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 200,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"name": "K"
										},
										"objectType": {
											"type": "reference",
											"name": "TunnelEvents"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 745,
								"name": "Tunnel.emit"
							}
						},
						{
							"id": 201,
							"name": "emit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 202,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "EventObject"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 748,
								"name": "Tunnel.emit"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 744,
						"name": "Tunnel.emit"
					}
				},
				{
					"id": 169,
					"name": "getEnvironments",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 231,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 170,
							"name": "getEnvironments",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get a list of environments available on the service.",
								"text": "This method should be overridden and use a specific implementation that\nreturns normalized environments from the service. E.g.\n\n```js\n{\n    browserName: 'firefox',\n    version: '12',\n    platform: 'windows',\n    descriptor: { <original returned environment> }\n}\n```\n",
								"returns": "An object containing the response and helper functions\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "NormalizedEnvironment"
										}
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 704,
								"name": "Tunnel.getEnvironments"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 703,
						"name": "Tunnel.getEnvironments"
					}
				},
				{
					"id": 203,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/Evented.d.ts",
							"line": 9,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 204,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 205,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 206,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "K"
									}
								},
								{
									"id": 207,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "K"
											},
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"name": "K"
												},
												"objectType": {
													"type": "reference",
													"name": "TunnelEvents"
												}
											}
										],
										"name": "EventedCallbackOrArray"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Handle"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 751,
								"name": "Tunnel.on"
							}
						},
						{
							"id": 208,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 209,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 210,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "EventObject"
											}
										],
										"name": "EventedCallbackOrArray"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Handle"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 755,
								"name": "Tunnel.on"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 750,
						"name": "Tunnel.on"
					}
				},
				{
					"id": 211,
					"name": "own",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/Evented.d.ts",
							"line": 11,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 212,
							"name": "own",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 213,
									"name": "handles",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Handle"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Handle"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Handle"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 759,
								"name": "Tunnel.own"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 758,
						"name": "Tunnel.own"
					}
				},
				{
					"id": 130,
					"name": "sendJobState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/CrossBrowserTestingTunnel.ts",
							"line": 134,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 131,
							"name": "sendJobState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sends information about a job to the tunnel provider."
							},
							"parameters": [
								{
									"id": 132,
									"name": "jobId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 133,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "JobState"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							},
							"overwrites": {
								"type": "reference",
								"id": 706,
								"name": "Tunnel.sendJobState"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 705,
						"name": "Tunnel.sendJobState"
					}
				},
				{
					"id": 171,
					"name": "start",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 277,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 172,
							"name": "start",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Starts the tunnel, automatically downloading dependencies if necessary.",
								"returns": "A promise that resolves once the tunnel has been established.\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 710,
								"name": "Tunnel.start"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 709,
						"name": "Tunnel.start"
					}
				},
				{
					"id": 173,
					"name": "stop",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 334,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 174,
							"name": "stop",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Stops the tunnel.",
								"returns": "A promise that resolves to the exit code for the tunnel once it\nhas been terminated.\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								],
								"name": "Promise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 712,
								"name": "Tunnel.stop"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 711,
						"name": "Tunnel.stop"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						111
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						195,
						158,
						159,
						156,
						160,
						157,
						141,
						143,
						114,
						144,
						140,
						145,
						146,
						196,
						147,
						148,
						149,
						150,
						151,
						153,
						152,
						154,
						142,
						155
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						115,
						161,
						117,
						122,
						163,
						165,
						167
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						175,
						127,
						180,
						184,
						137,
						189,
						134,
						193,
						214,
						124,
						197,
						169,
						203,
						211,
						130,
						171,
						173
					]
				}
			],
			"sources": [
				{
					"fileName": "src/CrossBrowserTestingTunnel.ts",
					"line": 51,
					"character": 21
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 662,
					"name": "Tunnel"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "CrossBrowserTestingProperties"
				}
			]
		},
		{
			"id": 216,
			"name": "NullTunnel",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "A no-op tunnel."
			},
			"children": [
				{
					"id": 217,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/NullTunnel.ts",
							"line": 8,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 218,
							"name": "new NullTunnel",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 219,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "TunnelProperties"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 216,
								"name": "default"
							},
							"overwrites": {
								"type": "reference",
								"id": 664,
								"name": "Tunnel.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 663,
						"name": "Tunnel.constructor"
					}
				},
				{
					"id": 293,
					"name": "__typeMap__",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true,
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/Evented.d.ts",
							"line": 3,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"name": "TunnelEvents"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 742,
						"name": "Tunnel.__typeMap__"
					}
				},
				{
					"id": 249,
					"name": "_handle",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 128,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "Handle"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 685,
						"name": "Tunnel._handle"
					}
				},
				{
					"id": 250,
					"name": "_process",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 129,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "ChildProcess"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 686,
						"name": "Tunnel._process"
					}
				},
				{
					"id": 247,
					"name": "_startTask",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 126,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "CancellablePromise"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 683,
						"name": "Tunnel._startTask"
					}
				},
				{
					"id": 251,
					"name": "_state",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 130,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "stopped"
							},
							{
								"type": "literal",
								"value": "starting"
							},
							{
								"type": "literal",
								"value": "running"
							},
							{
								"type": "literal",
								"value": "stopping"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 687,
						"name": "Tunnel._state"
					}
				},
				{
					"id": 248,
					"name": "_stopTask",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 127,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								],
								"name": "Promise"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 684,
						"name": "Tunnel._stopTask"
					}
				},
				{
					"id": 231,
					"name": "accessKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The tunnel access key. This will be initialized with a tunnel-specific\nenvironment variable if not specified."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 37,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 667,
						"name": "Tunnel.accessKey"
					}
				},
				{
					"id": 233,
					"name": "architecture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The architecture the tunnel will run against. This information is\nautomatically retrieved for the current system at runtime."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 49,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 669,
						"name": "Tunnel.architecture"
					}
				},
				{
					"id": 234,
					"name": "auth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "An HTTP authorization string to use when initiating connections to the\ntunnel. This value of this property is defined by Tunnel subclasses."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 55,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 670,
						"name": "Tunnel.auth"
					}
				},
				{
					"id": 235,
					"name": "directory",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The directory where the tunnel software will be extracted. If the\ndirectory does not exist, it will be created. This value is set by the\ntunnel subclasses."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 62,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 671,
						"name": "Tunnel.directory"
					}
				},
				{
					"id": 230,
					"name": "environmentUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The URL of a service that provides a list of environments supported by\nthe tunnel."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 31,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 666,
						"name": "Tunnel.environmentUrl"
					}
				},
				{
					"id": 236,
					"name": "executable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The executable to spawn in order to create a tunnel. This value is set\nby the tunnel subclasses."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 68,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 672,
						"name": "Tunnel.executable"
					}
				},
				{
					"id": 237,
					"name": "hostname",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The host on which a WebDriver client can access the service provided by\nthe tunnel. This may or may not be the host where the tunnel application\nis running."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 75,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 673,
						"name": "Tunnel.hostname"
					}
				},
				{
					"id": 294,
					"name": "listenersMap",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/Evented.d.ts",
							"line": 4,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "reference",
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "string"
												}
											],
											"name": "EventObject"
										}
									],
									"name": "EventedCallback"
								}
							}
						],
						"name": "Map"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 743,
						"name": "Tunnel.listenersMap"
					}
				},
				{
					"id": 238,
					"name": "pathname",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The path that a WebDriver client should use to access the service\nprovided by the tunnel."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 81,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 674,
						"name": "Tunnel.pathname"
					}
				},
				{
					"id": 239,
					"name": "platform",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The operating system the tunnel will run on. This information is\nautomatically retrieved for the current system at runtime."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 87,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 675,
						"name": "Tunnel.platform"
					}
				},
				{
					"id": 240,
					"name": "port",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The local port where the WebDriver server should be exposed by the\ntunnel. This is typed as a string for Url compatibility, but should be a\nnumber."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 94,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 676,
						"name": "Tunnel.port"
					}
				},
				{
					"id": 241,
					"name": "protocol",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The protocol (e.g., 'http') that a WebDriver client should use to access\nthe service provided by the tunnel."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 100,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 677,
						"name": "Tunnel.protocol"
					}
				},
				{
					"id": 242,
					"name": "proxy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The URL of a proxy server for the tunnel to go through. Only the\nhostname, port, and auth are used."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 106,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 678,
						"name": "Tunnel.proxy"
					}
				},
				{
					"id": 244,
					"name": "tunnelId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "A unique identifier for the newly created tunnel."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 118,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 680,
						"name": "Tunnel.tunnelId"
					}
				},
				{
					"id": 243,
					"name": "tunnelProxy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The URL of a proxy server for the tunnel to go through. Only the\nhostname, port, and auth are used.",
						"text": "This overrides the `proxy` configuration allowing independent\nconfiguration for the Tunnel binary process only.\n"
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 115,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 679,
						"name": "Tunnel.tunnelProxy"
					}
				},
				{
					"id": 245,
					"name": "url",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The URL where the tunnel software can be downloaded."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 121,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 681,
						"name": "Tunnel.url"
					}
				},
				{
					"id": 232,
					"name": "username",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The tunnel username. This will be initialized with a tunnel-specific\nenvironment variable if not specified."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 43,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 668,
						"name": "Tunnel.username"
					}
				},
				{
					"id": 246,
					"name": "verbose",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Whether or not to tell the tunnel to provide verbose logging output."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 124,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 682,
						"name": "Tunnel.verbose"
					}
				},
				{
					"id": 252,
					"name": "clientUrl",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "The URL that a WebDriver client should used to interact with this\nservice."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 154,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 253,
							"name": "clientUrl",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "The URL that a WebDriver client should used to interact with this\nservice."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 688,
						"name": "Tunnel.clientUrl"
					}
				},
				{
					"id": 254,
					"name": "extraCapabilities",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "A map of additional capabilities that need to be sent to the provider\nwhen a new session is being created."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 162,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 255,
							"name": "extraCapabilities",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "A map of additional capabilities that need to be sent to the provider\nwhen a new session is being created."
							},
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 690,
						"name": "Tunnel.extraCapabilities"
					}
				},
				{
					"id": 220,
					"name": "isDownloaded",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Whether or not the tunnel software has already been downloaded."
					},
					"sources": [
						{
							"fileName": "src/NullTunnel.ts",
							"line": 19,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 221,
							"name": "isDownloaded",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 692,
						"name": "Tunnel.isDownloaded"
					}
				},
				{
					"id": 256,
					"name": "isRunning",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Whether or not the tunnel is currently running."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 176,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 257,
							"name": "isRunning",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Whether or not the tunnel is currently running."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 694,
						"name": "Tunnel.isRunning"
					}
				},
				{
					"id": 258,
					"name": "isStarting",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Whether or not the tunnel is currently starting up."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 183,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 259,
							"name": "isStarting",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Whether or not the tunnel is currently starting up."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 696,
						"name": "Tunnel.isStarting"
					}
				},
				{
					"id": 260,
					"name": "isStopping",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Whether or not the tunnel is currently stopping."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 190,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 261,
							"name": "isStopping",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Whether or not the tunnel is currently stopping."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 698,
						"name": "Tunnel.isStopping"
					}
				},
				{
					"id": 264,
					"name": "_downloadFile",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 373,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 265,
							"name": "_downloadFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 266,
									"name": "url",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 267,
									"name": "proxy",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 268,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "DownloadProperties"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 714,
								"name": "Tunnel._downloadFile"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 713,
						"name": "Tunnel._downloadFile"
					}
				},
				{
					"id": 269,
					"name": "_makeArgs",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 431,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 270,
							"name": "_makeArgs",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates the list of command-line arguments to be passed to the spawned\ntunnel. Implementations should override this method to provide the\nappropriate command-line arguments.",
								"text": "Arguments passed to [[Tunnel._makeChild]] will be passed as-is to this\nmethod.\n",
								"returns": "A list of command-line arguments.\n"
							},
							"parameters": [
								{
									"id": 271,
									"name": "_values",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 719,
								"name": "Tunnel._makeArgs"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 718,
						"name": "Tunnel._makeArgs"
					}
				},
				{
					"id": 272,
					"name": "_makeChild",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 445,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 273,
							"name": "_makeChild",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a newly spawned child process for the tunnel software.\nImplementations should call this method to create the tunnel process.",
								"text": "Arguments passed to this method will be passed as-is to\n[[Tunnel._makeArgs]] and [[Tunnel._makeOptions]].\n",
								"returns": "An object containing a newly spawned Process and a Deferred that\nwill be resolved once the tunnel has started successfully.\n"
							},
							"parameters": [
								{
									"id": 274,
									"name": "executor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ChildExecutor"
									}
								},
								{
									"id": 275,
									"name": "values",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 722,
								"name": "Tunnel._makeChild"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 721,
						"name": "Tunnel._makeChild"
					}
				},
				{
					"id": 276,
					"name": "_makeOptions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 546,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 277,
							"name": "_makeOptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates the set of options to use when spawning the tunnel process.\nImplementations should override this method to provide the appropriate\noptions for the tunnel software.",
								"text": "Arguments passed to [[Tunnel._makeChild]] will be passed as-is to this\nmethod.\n",
								"returns": "A set of options matching those provided to Node.js\n`child_process.spawn`.\n"
							},
							"parameters": [
								{
									"id": 278,
									"name": "_values",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 279,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 280,
											"name": "env",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ProcessEnv"
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												280
											]
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 726,
								"name": "Tunnel._makeOptions"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 725,
						"name": "Tunnel._makeOptions"
					}
				},
				{
					"id": 281,
					"name": "_normalizeEnvironment",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 557,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 282,
							"name": "_normalizeEnvironment",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Normalizes a specific Tunnel environment descriptor to a general form. To\nbe overriden by a child implementation.",
								"returns": "a normalized environment\n"
							},
							"parameters": [
								{
									"id": 283,
									"name": "environment",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "an environment descriptor specific to the Tunnel"
									},
									"type": {
										"type": "reference",
										"name": "Object"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "NormalizedEnvironment"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 731,
								"name": "Tunnel._normalizeEnvironment"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 730,
						"name": "Tunnel._normalizeEnvironment"
					}
				},
				{
					"id": 284,
					"name": "_postDownloadFile",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 564,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 285,
							"name": "_postDownloadFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Called with the response after a file download has completed"
							},
							"parameters": [
								{
									"id": 286,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								},
								{
									"id": 287,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "DownloadProperties"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 734,
								"name": "Tunnel._postDownloadFile"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 733,
						"name": "Tunnel._postDownloadFile"
					}
				},
				{
					"id": 288,
					"name": "_start",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 593,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 289,
							"name": "_start",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "This method provides the implementation that actually starts the tunnel\nand any other logic for emitting events on the Tunnel based on data\npassed by the tunnel software.",
								"text": "The default implementation that assumes the tunnel is ready for use once\nthe child process has written to `stdout` or `stderr`. This method should\nbe reimplemented by other tunnel launchers to implement correct launch\ndetection logic.\n",
								"returns": "An object containing a reference to the child process, and a\nDeferred that is resolved once the tunnel is ready for use. Normally this\nwill be the object returned from a call to [[Tunnel._makeChild]].\n"
							},
							"parameters": [
								{
									"id": 290,
									"name": "executor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ChildExecutor"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 738,
								"name": "Tunnel._start"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 737,
						"name": "Tunnel._start"
					}
				},
				{
					"id": 291,
					"name": "_stop",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 622,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 292,
							"name": "_stop",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "This method provides the implementation that actually stops the tunnel.",
								"text": "The default implementation that assumes the tunnel has been closed once\nthe child process has exited. This method should be reimplemented by\nother tunnel launchers to implement correct shutdown logic, if necessary.\n",
								"returns": "A promise that resolves once the tunnel has shut down.\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								],
								"name": "Promise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 741,
								"name": "Tunnel._stop"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 740,
						"name": "Tunnel._stop"
					}
				},
				{
					"id": 312,
					"name": "destroy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/Evented.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 313,
							"name": "destroy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 762,
								"name": "Tunnel.destroy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 761,
						"name": "Tunnel.destroy"
					}
				},
				{
					"id": 222,
					"name": "download",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/NullTunnel.ts",
							"line": 23,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 223,
							"name": "download",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Downloads and extracts the tunnel software if it is not already\ndownloaded.",
								"text": "This method can be extended by implementations to perform any necessary\npost-processing, such as setting appropriate file permissions on the\ndownloaded executable.\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							},
							"overwrites": {
								"type": "reference",
								"id": 701,
								"name": "Tunnel.download"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 700,
						"name": "Tunnel.download"
					}
				},
				{
					"id": 295,
					"name": "emit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/Evented.d.ts",
							"line": 7,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 296,
							"name": "emit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 297,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 298,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"name": "K"
										},
										"objectType": {
											"type": "reference",
											"name": "TunnelEvents"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 745,
								"name": "Tunnel.emit"
							}
						},
						{
							"id": 299,
							"name": "emit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 300,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "EventObject"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 748,
								"name": "Tunnel.emit"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 744,
						"name": "Tunnel.emit"
					}
				},
				{
					"id": 262,
					"name": "getEnvironments",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 231,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 263,
							"name": "getEnvironments",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get a list of environments available on the service.",
								"text": "This method should be overridden and use a specific implementation that\nreturns normalized environments from the service. E.g.\n\n```js\n{\n    browserName: 'firefox',\n    version: '12',\n    platform: 'windows',\n    descriptor: { <original returned environment> }\n}\n```\n",
								"returns": "An object containing the response and helper functions\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "NormalizedEnvironment"
										}
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 704,
								"name": "Tunnel.getEnvironments"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 703,
						"name": "Tunnel.getEnvironments"
					}
				},
				{
					"id": 301,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/Evented.d.ts",
							"line": 9,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 302,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 303,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 304,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "K"
									}
								},
								{
									"id": 305,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "K"
											},
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"name": "K"
												},
												"objectType": {
													"type": "reference",
													"name": "TunnelEvents"
												}
											}
										],
										"name": "EventedCallbackOrArray"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Handle"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 751,
								"name": "Tunnel.on"
							}
						},
						{
							"id": 306,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 307,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 308,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "EventObject"
											}
										],
										"name": "EventedCallbackOrArray"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Handle"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 755,
								"name": "Tunnel.on"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 750,
						"name": "Tunnel.on"
					}
				},
				{
					"id": 309,
					"name": "own",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/Evented.d.ts",
							"line": 11,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 310,
							"name": "own",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 311,
									"name": "handles",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Handle"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Handle"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Handle"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 759,
								"name": "Tunnel.own"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 758,
						"name": "Tunnel.own"
					}
				},
				{
					"id": 228,
					"name": "sendJobState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/NullTunnel.ts",
							"line": 37,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 229,
							"name": "sendJobState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sends information about a job to the tunnel provider."
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							},
							"overwrites": {
								"type": "reference",
								"id": 706,
								"name": "Tunnel.sendJobState"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 705,
						"name": "Tunnel.sendJobState"
					}
				},
				{
					"id": 224,
					"name": "start",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/NullTunnel.ts",
							"line": 27,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 225,
							"name": "start",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Starts the tunnel, automatically downloading dependencies if necessary."
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							},
							"overwrites": {
								"type": "reference",
								"id": 710,
								"name": "Tunnel.start"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 709,
						"name": "Tunnel.start"
					}
				},
				{
					"id": 226,
					"name": "stop",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/NullTunnel.ts",
							"line": 32,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 227,
							"name": "stop",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Stops the tunnel."
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "Promise"
							},
							"overwrites": {
								"type": "reference",
								"id": 712,
								"name": "Tunnel.stop"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 711,
						"name": "Tunnel.stop"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						217
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						293,
						249,
						250,
						247,
						251,
						248,
						231,
						233,
						234,
						235,
						230,
						236,
						237,
						294,
						238,
						239,
						240,
						241,
						242,
						244,
						243,
						245,
						232,
						246
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						252,
						254,
						220,
						256,
						258,
						260
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						264,
						269,
						272,
						276,
						281,
						284,
						288,
						291,
						312,
						222,
						295,
						262,
						301,
						309,
						228,
						224,
						226
					]
				}
			],
			"sources": [
				{
					"fileName": "src/NullTunnel.ts",
					"line": 7,
					"character": 21
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 662,
					"name": "Tunnel"
				}
			]
		},
		{
			"id": 314,
			"name": "SauceLabsTunnel",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "A Sauce Labs tunnel. This tunnel uses Sauce Connect 4 on platforms where it\nis supported, and Sauce Connect 3 on all other platforms.",
				"text": "The accessKey and username properties will be initialized using\nSAUCE_ACCESS_KEY and SAUCE_USERNAME.\n\nSee [[SauceLabsTunnel.SauceLabsProperties]] for a list of options specific to\nthis tunnel class.\n"
			},
			"children": [
				{
					"id": 315,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/SauceLabsTunnel.ts",
							"line": 125,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 316,
							"name": "new SauceLabsTunnel",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 317,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SauceLabsProperties"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 314,
								"name": "default"
							},
							"overwrites": {
								"type": "reference",
								"id": 664,
								"name": "Tunnel.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 663,
						"name": "Tunnel.constructor"
					}
				},
				{
					"id": 419,
					"name": "__typeMap__",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true,
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/Evented.d.ts",
							"line": 3,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"name": "TunnelEvents"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 742,
						"name": "Tunnel.__typeMap__"
					}
				},
				{
					"id": 383,
					"name": "_handle",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 128,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "Handle"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 685,
						"name": "Tunnel._handle"
					}
				},
				{
					"id": 384,
					"name": "_process",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 129,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "ChildProcess"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 686,
						"name": "Tunnel._process"
					}
				},
				{
					"id": 381,
					"name": "_startTask",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 126,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "CancellablePromise"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 683,
						"name": "Tunnel._startTask"
					}
				},
				{
					"id": 385,
					"name": "_state",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 130,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "stopped"
							},
							{
								"type": "literal",
								"value": "starting"
							},
							{
								"type": "literal",
								"value": "running"
							},
							{
								"type": "literal",
								"value": "stopping"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 687,
						"name": "Tunnel._state"
					}
				},
				{
					"id": 382,
					"name": "_stopTask",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 127,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								],
								"name": "Promise"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 684,
						"name": "Tunnel._stopTask"
					}
				},
				{
					"id": 318,
					"name": "accessKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The tunnel access key. This will be initialized with a tunnel-specific\nenvironment variable if not specified."
					},
					"sources": [
						{
							"fileName": "src/SauceLabsTunnel.ts",
							"line": 31,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"id": 667,
						"name": "Tunnel.accessKey"
					},
					"implementationOf": {
						"type": "reference",
						"name": "SauceLabsProperties.accessKey"
					}
				},
				{
					"id": 370,
					"name": "architecture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The architecture the tunnel will run against. This information is\nautomatically retrieved for the current system at runtime."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 49,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 669,
						"name": "Tunnel.architecture"
					},
					"implementationOf": {
						"type": "reference",
						"name": "SauceLabsProperties.architecture"
					}
				},
				{
					"id": 319,
					"name": "directDomains",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "A list of domains that should not be proxied by the tunnel on the remote\nVM."
					},
					"sources": [
						{
							"fileName": "src/SauceLabsTunnel.ts",
							"line": 37,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"implementationOf": {
						"type": "reference",
						"name": "SauceLabsProperties.directDomains"
					}
				},
				{
					"id": 371,
					"name": "directory",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The directory where the tunnel software will be extracted. If the\ndirectory does not exist, it will be created. This value is set by the\ntunnel subclasses."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 62,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 671,
						"name": "Tunnel.directory"
					},
					"implementationOf": {
						"type": "reference",
						"name": "SauceLabsProperties.directory"
					}
				},
				{
					"id": 321,
					"name": "domainAuthentication",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "A list of URLs that require additional HTTP authentication. Only the\nhostname, port, and auth are used. This property is only supported by\nSauce Connect 4 tunnels."
					},
					"sources": [
						{
							"fileName": "src/SauceLabsTunnel.ts",
							"line": 49,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"implementationOf": {
						"type": "reference",
						"name": "SauceLabsProperties.domainAuthentication"
					}
				},
				{
					"id": 369,
					"name": "environmentUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The URL of a service that provides a list of environments supported by\nthe tunnel."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 31,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 666,
						"name": "Tunnel.environmentUrl"
					}
				},
				{
					"id": 322,
					"name": "fastFailDomains",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "A list of regular expressions corresponding to domains whose connections\nshould fail immediately if the VM attempts to make a connection to them."
					},
					"sources": [
						{
							"fileName": "src/SauceLabsTunnel.ts",
							"line": 55,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"implementationOf": {
						"type": "reference",
						"name": "SauceLabsProperties.fastFailDomains"
					}
				},
				{
					"id": 372,
					"name": "hostname",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The host on which a WebDriver client can access the service provided by\nthe tunnel. This may or may not be the host where the tunnel application\nis running."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 75,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 673,
						"name": "Tunnel.hostname"
					},
					"implementationOf": {
						"type": "reference",
						"name": "SauceLabsProperties.hostname"
					}
				},
				{
					"id": 323,
					"name": "isSharedTunnel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Allows the tunnel to also be used by sub-accounts of the user that\nstarted the tunnel."
					},
					"sources": [
						{
							"fileName": "src/SauceLabsTunnel.ts",
							"line": 61,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"implementationOf": {
						"type": "reference",
						"name": "SauceLabsProperties.isSharedTunnel"
					}
				},
				{
					"id": 420,
					"name": "listenersMap",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/Evented.d.ts",
							"line": 4,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "reference",
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "string"
												}
											],
											"name": "EventObject"
										}
									],
									"name": "EventedCallback"
								}
							}
						],
						"name": "Map"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 743,
						"name": "Tunnel.listenersMap"
					}
				},
				{
					"id": 324,
					"name": "logFile",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "A filename where additional logs from the tunnel should be output."
					},
					"sources": [
						{
							"fileName": "src/SauceLabsTunnel.ts",
							"line": 64,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"implementationOf": {
						"type": "reference",
						"name": "SauceLabsProperties.logFile"
					}
				},
				{
					"id": 327,
					"name": "logFileSize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Specifies the maximum log filesize before rotation, in bytes. This\nproperty is only supported by Sauce Connect 3 tunnels."
					},
					"sources": [
						{
							"fileName": "src/SauceLabsTunnel.ts",
							"line": 80,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"implementationOf": {
						"type": "reference",
						"name": "SauceLabsProperties.logFileSize"
					}
				},
				{
					"id": 328,
					"name": "logTrafficStats",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Log statistics about HTTP traffic every `logTrafficStats` milliseconds.\nThis property is only supported by Sauce Connect 4 tunnels."
					},
					"sources": [
						{
							"fileName": "src/SauceLabsTunnel.ts",
							"line": 86,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"implementationOf": {
						"type": "reference",
						"name": "SauceLabsProperties.logTrafficStats"
					}
				},
				{
					"id": 325,
					"name": "pacFile",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The absolute filepath (or URL) of a file which Sauce Connect should use\nfor additional proxy configuration. Sauce Connect suggests using either\nthis or `proxy`, but not both."
					},
					"sources": [
						{
							"fileName": "src/SauceLabsTunnel.ts",
							"line": 71,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"implementationOf": {
						"type": "reference",
						"name": "SauceLabsProperties.pacFile"
					}
				},
				{
					"id": 373,
					"name": "pathname",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The path that a WebDriver client should use to access the service\nprovided by the tunnel."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 81,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 674,
						"name": "Tunnel.pathname"
					},
					"implementationOf": {
						"type": "reference",
						"name": "SauceLabsProperties.pathname"
					}
				},
				{
					"id": 326,
					"name": "pidFile",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "A filename where Sauce Connect stores its process information."
					},
					"sources": [
						{
							"fileName": "src/SauceLabsTunnel.ts",
							"line": 74,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"implementationOf": {
						"type": "reference",
						"name": "SauceLabsProperties.pidFile"
					}
				},
				{
					"id": 374,
					"name": "platform",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The operating system the tunnel will run on. This information is\nautomatically retrieved for the current system at runtime."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 87,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 675,
						"name": "Tunnel.platform"
					},
					"implementationOf": {
						"type": "reference",
						"name": "SauceLabsProperties.platform"
					}
				},
				{
					"id": 375,
					"name": "port",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The local port where the WebDriver server should be exposed by the\ntunnel. This is typed as a string for Url compatibility, but should be a\nnumber."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 94,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 676,
						"name": "Tunnel.port"
					},
					"implementationOf": {
						"type": "reference",
						"name": "SauceLabsProperties.port"
					}
				},
				{
					"id": 376,
					"name": "protocol",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The protocol (e.g., 'http') that a WebDriver client should use to access\nthe service provided by the tunnel."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 100,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 677,
						"name": "Tunnel.protocol"
					},
					"implementationOf": {
						"type": "reference",
						"name": "SauceLabsProperties.protocol"
					}
				},
				{
					"id": 377,
					"name": "proxy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The URL of a proxy server for the tunnel to go through. Only the\nhostname, port, and auth are used."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 106,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 678,
						"name": "Tunnel.proxy"
					},
					"implementationOf": {
						"type": "reference",
						"name": "SauceLabsProperties.proxy"
					}
				},
				{
					"id": 329,
					"name": "restUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "An alternative URL for the Sauce REST API. This property is only\nsupported by Sauce Connect 3 tunnels."
					},
					"sources": [
						{
							"fileName": "src/SauceLabsTunnel.ts",
							"line": 92,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"implementationOf": {
						"type": "reference",
						"name": "SauceLabsProperties.restUrl"
					}
				},
				{
					"id": 334,
					"name": "scVersion",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The version of Sauce Connect that should be used"
					},
					"sources": [
						{
							"fileName": "src/SauceLabsTunnel.ts",
							"line": 121,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 330,
					"name": "skipSslDomains",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "A list of domains that should not have their SSL connections re-encrypted\nwhen going through the tunnel."
					},
					"sources": [
						{
							"fileName": "src/SauceLabsTunnel.ts",
							"line": 98,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"implementationOf": {
						"type": "reference",
						"name": "SauceLabsProperties.skipSslDomains"
					}
				},
				{
					"id": 331,
					"name": "squidOptions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "An additional set of options to use with the Squid proxy for the remote\nVM. This property is only supported by Sauce Connect 3 tunnels."
					},
					"sources": [
						{
							"fileName": "src/SauceLabsTunnel.ts",
							"line": 104,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"implementationOf": {
						"type": "reference",
						"name": "SauceLabsProperties.squidOptions"
					}
				},
				{
					"id": 320,
					"name": "tunnelDomains",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "A list of domains that will be proxied by the tunnel on the remote VM."
					},
					"sources": [
						{
							"fileName": "src/SauceLabsTunnel.ts",
							"line": 42,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"implementationOf": {
						"type": "reference",
						"name": "SauceLabsProperties.tunnelDomains"
					}
				},
				{
					"id": 379,
					"name": "tunnelId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "A unique identifier for the newly created tunnel."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 118,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 680,
						"name": "Tunnel.tunnelId"
					},
					"implementationOf": {
						"type": "reference",
						"name": "SauceLabsProperties.tunnelId"
					}
				},
				{
					"id": 378,
					"name": "tunnelProxy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The URL of a proxy server for the tunnel to go through. Only the\nhostname, port, and auth are used.",
						"text": "This overrides the `proxy` configuration allowing independent\nconfiguration for the Tunnel binary process only.\n"
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 115,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 679,
						"name": "Tunnel.tunnelProxy"
					},
					"implementationOf": {
						"type": "reference",
						"name": "SauceLabsProperties.tunnelProxy"
					}
				},
				{
					"id": 332,
					"name": "useProxyForTunnel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Whether or not to use the proxy defined at [[Tunnel.proxy]] for the\ntunnel connection itself."
					},
					"sources": [
						{
							"fileName": "src/SauceLabsTunnel.ts",
							"line": 110,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"implementationOf": {
						"type": "reference",
						"name": "SauceLabsProperties.useProxyForTunnel"
					}
				},
				{
					"id": 335,
					"name": "username",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The tunnel username. This will be initialized with a tunnel-specific\nenvironment variable if not specified."
					},
					"sources": [
						{
							"fileName": "src/SauceLabsTunnel.ts",
							"line": 123,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"id": 668,
						"name": "Tunnel.username"
					},
					"implementationOf": {
						"type": "reference",
						"name": "SauceLabsProperties.username"
					}
				},
				{
					"id": 380,
					"name": "verbose",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Whether or not to tell the tunnel to provide verbose logging output."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 124,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 682,
						"name": "Tunnel.verbose"
					},
					"implementationOf": {
						"type": "reference",
						"name": "SauceLabsProperties.verbose"
					}
				},
				{
					"id": 333,
					"name": "vmVersion",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Overrides the version of the VM created on Sauce Labs. This property is\nonly supported by Sauce Connect 3 tunnels."
					},
					"sources": [
						{
							"fileName": "src/SauceLabsTunnel.ts",
							"line": 116,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"implementationOf": {
						"type": "reference",
						"name": "SauceLabsProperties.vmVersion"
					}
				},
				{
					"id": 336,
					"name": "auth",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "An HTTP authorization string to use when initiating connections to the\ntunnel. This value of this property is defined by Tunnel subclasses."
					},
					"sources": [
						{
							"fileName": "src/SauceLabsTunnel.ts",
							"line": 150,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 337,
							"name": "auth",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 670,
						"name": "Tunnel.auth"
					}
				},
				{
					"id": 386,
					"name": "clientUrl",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "The URL that a WebDriver client should used to interact with this\nservice."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 154,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 387,
							"name": "clientUrl",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "The URL that a WebDriver client should used to interact with this\nservice."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 688,
						"name": "Tunnel.clientUrl"
					}
				},
				{
					"id": 338,
					"name": "executable",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "The executable to spawn in order to create a tunnel. This value is set\nby the tunnel subclasses."
					},
					"sources": [
						{
							"fileName": "src/SauceLabsTunnel.ts",
							"line": 155,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 339,
							"name": "executable",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 672,
						"name": "Tunnel.executable"
					}
				},
				{
					"id": 340,
					"name": "extraCapabilities",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "A map of additional capabilities that need to be sent to the provider\nwhen a new session is being created."
					},
					"sources": [
						{
							"fileName": "src/SauceLabsTunnel.ts",
							"line": 178,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 341,
							"name": "extraCapabilities",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 690,
						"name": "Tunnel.extraCapabilities"
					}
				},
				{
					"id": 342,
					"name": "isDownloaded",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Whether or not the tunnel software has already been downloaded."
					},
					"sources": [
						{
							"fileName": "src/SauceLabsTunnel.ts",
							"line": 188,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 343,
							"name": "isDownloaded",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 692,
						"name": "Tunnel.isDownloaded"
					}
				},
				{
					"id": 388,
					"name": "isRunning",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Whether or not the tunnel is currently running."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 176,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 389,
							"name": "isRunning",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Whether or not the tunnel is currently running."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 694,
						"name": "Tunnel.isRunning"
					}
				},
				{
					"id": 390,
					"name": "isStarting",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Whether or not the tunnel is currently starting up."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 183,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 391,
							"name": "isStarting",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Whether or not the tunnel is currently starting up."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 696,
						"name": "Tunnel.isStarting"
					}
				},
				{
					"id": 392,
					"name": "isStopping",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Whether or not the tunnel is currently stopping."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 190,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 393,
							"name": "isStopping",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Whether or not the tunnel is currently stopping."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 698,
						"name": "Tunnel.isStopping"
					}
				},
				{
					"id": 344,
					"name": "url",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "The URL where the tunnel software can be downloaded."
					},
					"sources": [
						{
							"fileName": "src/SauceLabsTunnel.ts",
							"line": 197,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 345,
							"name": "url",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 681,
						"name": "Tunnel.url"
					}
				},
				{
					"id": 403,
					"name": "_downloadFile",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 373,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 404,
							"name": "_downloadFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 405,
									"name": "url",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 406,
									"name": "proxy",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 407,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "DownloadProperties"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 714,
								"name": "Tunnel._downloadFile"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 713,
						"name": "Tunnel._downloadFile"
					}
				},
				{
					"id": 356,
					"name": "_makeArgs",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/SauceLabsTunnel.ts",
							"line": 280,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 357,
							"name": "_makeArgs",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates the list of command-line arguments to be passed to the spawned\ntunnel. Implementations should override this method to provide the\nappropriate command-line arguments.",
								"text": "Arguments passed to [[Tunnel._makeChild]] will be passed as-is to this\nmethod.\n"
							},
							"parameters": [
								{
									"id": 358,
									"name": "readyFile",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 719,
								"name": "Tunnel._makeArgs"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 718,
						"name": "Tunnel._makeArgs"
					}
				},
				{
					"id": 408,
					"name": "_makeChild",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 445,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 409,
							"name": "_makeChild",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a newly spawned child process for the tunnel software.\nImplementations should call this method to create the tunnel process.",
								"text": "Arguments passed to this method will be passed as-is to\n[[Tunnel._makeArgs]] and [[Tunnel._makeOptions]].\n",
								"returns": "An object containing a newly spawned Process and a Deferred that\nwill be resolved once the tunnel has started successfully.\n"
							},
							"parameters": [
								{
									"id": 410,
									"name": "executor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ChildExecutor"
									}
								},
								{
									"id": 411,
									"name": "values",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 722,
								"name": "Tunnel._makeChild"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 721,
						"name": "Tunnel._makeChild"
					}
				},
				{
					"id": 353,
					"name": "_makeJavaArgs",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/SauceLabsTunnel.ts",
							"line": 256,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 354,
							"name": "_makeJavaArgs",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 355,
									"name": "proxy",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "Url"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					]
				},
				{
					"id": 350,
					"name": "_makeNativeArgs",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/SauceLabsTunnel.ts",
							"line": 226,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 351,
							"name": "_makeNativeArgs",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 352,
									"name": "proxy",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "Url"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					]
				},
				{
					"id": 412,
					"name": "_makeOptions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 546,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 413,
							"name": "_makeOptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates the set of options to use when spawning the tunnel process.\nImplementations should override this method to provide the appropriate\noptions for the tunnel software.",
								"text": "Arguments passed to [[Tunnel._makeChild]] will be passed as-is to this\nmethod.\n",
								"returns": "A set of options matching those provided to Node.js\n`child_process.spawn`.\n"
							},
							"parameters": [
								{
									"id": 414,
									"name": "_values",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 415,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 416,
											"name": "env",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ProcessEnv"
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												416
											]
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 726,
								"name": "Tunnel._makeOptions"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 725,
						"name": "Tunnel._makeOptions"
					}
				},
				{
					"id": 366,
					"name": "_normalizeEnvironment",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/SauceLabsTunnel.ts",
							"line": 522,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 367,
							"name": "_normalizeEnvironment",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Attempt to normalize a SauceLabs described environment with the standard\nSelenium capabilities",
								"text": "SauceLabs returns a list of environments that looks like:\n\n{\n    \"short_version\": \"25\",\n    \"long_name\": \"Firefox\",\n    \"api_name\": \"firefox\",\n    \"long_version\": \"25.0b2.\",\n    \"latest_stable_version\": \"\",\n    \"automation_backend\": \"webdriver\",\n    \"os\": \"Windows 2003\"\n}\n",
								"returns": "a normalized descriptor\n"
							},
							"parameters": [
								{
									"id": 368,
									"name": "environment",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "a SauceLabs environment descriptor"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "NormalizedEnvironment"
							},
							"overwrites": {
								"type": "reference",
								"id": 731,
								"name": "Tunnel._normalizeEnvironment"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 730,
						"name": "Tunnel._normalizeEnvironment"
					}
				},
				{
					"id": 346,
					"name": "_postDownloadFile",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/SauceLabsTunnel.ts",
							"line": 215,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 347,
							"name": "_postDownloadFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Called with the response after a file download has completed"
							},
							"parameters": [
								{
									"id": 348,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								},
								{
									"id": 349,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "DownloadProperties"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise"
							},
							"overwrites": {
								"type": "reference",
								"id": 734,
								"name": "Tunnel._postDownloadFile"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 733,
						"name": "Tunnel._postDownloadFile"
					}
				},
				{
					"id": 363,
					"name": "_start",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/SauceLabsTunnel.ts",
							"line": 356,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 364,
							"name": "_start",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "This method provides the implementation that actually starts the tunnel\nand any other logic for emitting events on the Tunnel based on data\npassed by the tunnel software.",
								"text": "The default implementation that assumes the tunnel is ready for use once\nthe child process has written to `stdout` or `stderr`. This method should\nbe reimplemented by other tunnel launchers to implement correct launch\ndetection logic.\n"
							},
							"parameters": [
								{
									"id": 365,
									"name": "executor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ChildExecutor"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "CancellablePromise"
							},
							"overwrites": {
								"type": "reference",
								"id": 738,
								"name": "Tunnel._start"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 737,
						"name": "Tunnel._start"
					}
				},
				{
					"id": 417,
					"name": "_stop",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 622,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 418,
							"name": "_stop",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "This method provides the implementation that actually stops the tunnel.",
								"text": "The default implementation that assumes the tunnel has been closed once\nthe child process has exited. This method should be reimplemented by\nother tunnel launchers to implement correct shutdown logic, if necessary.\n",
								"returns": "A promise that resolves once the tunnel has shut down.\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								],
								"name": "Promise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 741,
								"name": "Tunnel._stop"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 740,
						"name": "Tunnel._stop"
					}
				},
				{
					"id": 438,
					"name": "destroy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/Evented.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 439,
							"name": "destroy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 762,
								"name": "Tunnel.destroy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 761,
						"name": "Tunnel.destroy"
					}
				},
				{
					"id": 394,
					"name": "download",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 207,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 395,
							"name": "download",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Downloads and extracts the tunnel software if it is not already\ndownloaded.",
								"text": "This method can be extended by implementations to perform any necessary\npost-processing, such as setting appropriate file permissions on the\ndownloaded executable.\n",
								"returns": "A promise that resolves once the download and extraction process\nhas completed.\n"
							},
							"parameters": [
								{
									"id": 396,
									"name": "forceDownload",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Force downloading the software even if it already\nhas been downloaded."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 701,
								"name": "Tunnel.download"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 700,
						"name": "Tunnel.download"
					}
				},
				{
					"id": 421,
					"name": "emit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/Evented.d.ts",
							"line": 7,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 422,
							"name": "emit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 423,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 424,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"name": "K"
										},
										"objectType": {
											"type": "reference",
											"name": "TunnelEvents"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 745,
								"name": "Tunnel.emit"
							}
						},
						{
							"id": 425,
							"name": "emit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 426,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "EventObject"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 748,
								"name": "Tunnel.emit"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 744,
						"name": "Tunnel.emit"
					}
				},
				{
					"id": 397,
					"name": "getEnvironments",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 231,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 398,
							"name": "getEnvironments",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get a list of environments available on the service.",
								"text": "This method should be overridden and use a specific implementation that\nreturns normalized environments from the service. E.g.\n\n```js\n{\n    browserName: 'firefox',\n    version: '12',\n    platform: 'windows',\n    descriptor: { <original returned environment> }\n}\n```\n",
								"returns": "An object containing the response and helper functions\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "NormalizedEnvironment"
										}
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 704,
								"name": "Tunnel.getEnvironments"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 703,
						"name": "Tunnel.getEnvironments"
					}
				},
				{
					"id": 427,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/Evented.d.ts",
							"line": 9,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 428,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 429,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 430,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "K"
									}
								},
								{
									"id": 431,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "K"
											},
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"name": "K"
												},
												"objectType": {
													"type": "reference",
													"name": "TunnelEvents"
												}
											}
										],
										"name": "EventedCallbackOrArray"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Handle"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 751,
								"name": "Tunnel.on"
							}
						},
						{
							"id": 432,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 433,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 434,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "EventObject"
											}
										],
										"name": "EventedCallbackOrArray"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Handle"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 755,
								"name": "Tunnel.on"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 750,
						"name": "Tunnel.on"
					}
				},
				{
					"id": 435,
					"name": "own",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/Evented.d.ts",
							"line": 11,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 436,
							"name": "own",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 437,
									"name": "handles",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Handle"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Handle"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Handle"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 759,
								"name": "Tunnel.own"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 758,
						"name": "Tunnel.own"
					}
				},
				{
					"id": 359,
					"name": "sendJobState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/SauceLabsTunnel.ts",
							"line": 311,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 360,
							"name": "sendJobState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sends information about a job to the tunnel provider."
							},
							"parameters": [
								{
									"id": 361,
									"name": "jobId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 362,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "JobState"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							},
							"overwrites": {
								"type": "reference",
								"id": 706,
								"name": "Tunnel.sendJobState"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 705,
						"name": "Tunnel.sendJobState"
					}
				},
				{
					"id": 399,
					"name": "start",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 277,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 400,
							"name": "start",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Starts the tunnel, automatically downloading dependencies if necessary.",
								"returns": "A promise that resolves once the tunnel has been established.\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 710,
								"name": "Tunnel.start"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 709,
						"name": "Tunnel.start"
					}
				},
				{
					"id": 401,
					"name": "stop",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 334,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 402,
							"name": "stop",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Stops the tunnel.",
								"returns": "A promise that resolves to the exit code for the tunnel once it\nhas been terminated.\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								],
								"name": "Promise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 712,
								"name": "Tunnel.stop"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 711,
						"name": "Tunnel.stop"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						315
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						419,
						383,
						384,
						381,
						385,
						382,
						318,
						370,
						319,
						371,
						321,
						369,
						322,
						372,
						323,
						420,
						324,
						327,
						328,
						325,
						373,
						326,
						374,
						375,
						376,
						377,
						329,
						334,
						330,
						331,
						320,
						379,
						378,
						332,
						335,
						380,
						333
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						336,
						386,
						338,
						340,
						342,
						388,
						390,
						392,
						344
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						403,
						356,
						408,
						353,
						350,
						412,
						366,
						346,
						363,
						417,
						438,
						394,
						421,
						397,
						427,
						435,
						359,
						399,
						401
					]
				}
			],
			"sources": [
				{
					"fileName": "src/SauceLabsTunnel.ts",
					"line": 27,
					"character": 21
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 662,
					"name": "Tunnel"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "SauceLabsProperties"
				}
			]
		},
		{
			"id": 440,
			"name": "SeleniumTunnel",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "A Selenium tunnel. This tunnel downloads the\n[[http://www.seleniumhq.org/download/|Selenium-standalone server]] and any\nnecessary WebDriver executables, and handles starting and stopping Selenium.",
				"text": "The primary configuration option is [[SeleniumTunnel.drivers|drivers]], which\ndetermines which browsers the Selenium tunnel will support.\n\nNote that Java must be installed and in the system path to use this tunnel.\n\nThe standard browser names (for the `browserName` WebDriver capability) are:\n\n- `MicrosoftEdge`\n- `chrome`\n- `firefox`\n- `internet explorer`\n- `safari`\n"
			},
			"children": [
				{
					"id": 441,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/SeleniumTunnel.ts",
							"line": 123,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 442,
							"name": "new SeleniumTunnel",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 443,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SeleniumProperties"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 440,
								"name": "default"
							},
							"overwrites": {
								"type": "reference",
								"id": 664,
								"name": "Tunnel.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 663,
						"name": "Tunnel.constructor"
					}
				},
				{
					"id": 533,
					"name": "__typeMap__",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true,
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/Evented.d.ts",
							"line": 3,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"name": "TunnelEvents"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 742,
						"name": "Tunnel.__typeMap__"
					}
				},
				{
					"id": 495,
					"name": "_handle",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 128,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "Handle"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 685,
						"name": "Tunnel._handle"
					}
				},
				{
					"id": 496,
					"name": "_process",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 129,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "ChildProcess"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 686,
						"name": "Tunnel._process"
					}
				},
				{
					"id": 493,
					"name": "_startTask",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 126,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "CancellablePromise"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 683,
						"name": "Tunnel._startTask"
					}
				},
				{
					"id": 497,
					"name": "_state",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 130,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "stopped"
							},
							{
								"type": "literal",
								"value": "starting"
							},
							{
								"type": "literal",
								"value": "running"
							},
							{
								"type": "literal",
								"value": "stopping"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 687,
						"name": "Tunnel._state"
					}
				},
				{
					"id": 494,
					"name": "_stopTask",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 127,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								],
								"name": "Promise"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 684,
						"name": "Tunnel._stopTask"
					}
				},
				{
					"id": 480,
					"name": "accessKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The tunnel access key. This will be initialized with a tunnel-specific\nenvironment variable if not specified."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 37,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 667,
						"name": "Tunnel.accessKey"
					},
					"implementationOf": {
						"type": "reference",
						"name": "SeleniumProperties.accessKey"
					}
				},
				{
					"id": 482,
					"name": "architecture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The architecture the tunnel will run against. This information is\nautomatically retrieved for the current system at runtime."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 49,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 669,
						"name": "Tunnel.architecture"
					},
					"implementationOf": {
						"type": "reference",
						"name": "SeleniumProperties.architecture"
					}
				},
				{
					"id": 483,
					"name": "auth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "An HTTP authorization string to use when initiating connections to the\ntunnel. This value of this property is defined by Tunnel subclasses."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 55,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 670,
						"name": "Tunnel.auth"
					},
					"implementationOf": {
						"type": "reference",
						"name": "SeleniumProperties.auth"
					}
				},
				{
					"id": 446,
					"name": "baseUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The base address where Selenium artifacts may be found.",
						"tags": [
							{
								"tag": "default",
								"text": "https://selenium-release.storage.googleapis.com\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/SeleniumTunnel.ts",
							"line": 98,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"implementationOf": {
						"type": "reference",
						"name": "SeleniumProperties.baseUrl"
					}
				},
				{
					"id": 445,
					"name": "drivers",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The desired Selenium drivers to download. Each entry may be a string or an\nobject. Strings must be the names of existing drivers in SeleniumTunnel\n(see below). An object with a 'name' property is a configuration object --\nthe name must be the name of an existing driver in SeleniumTunnel, and the\nremaining properties will be used to configure that driver. An object\nwithout a 'name' property is a driver definition. It must contain three\nproperties:",
						"text": "- `executable` - the name of the driver executable, one of:\n- `url` - the URL where the driver can be downloaded from\n- `seleniumProperty` - the name of the Java property used to tell\n  Selenium where the driver is\n\n```js\n[\n    'chrome',\n    {\n        name: 'firefox',\n        version: '0.8.0'\n    },\n    {\n        url: 'https://github.com/operasoftware/operachromiumdriver/releases/.../operadriver_mac64.zip',\n        executable: 'operadriver',\n        seleniumProperty: 'webdriver.opera.driver'\n    }\n]\n```\n\nThe built-in SeleniumTunnel drivers are:\n\n- 'chrome'\n- 'firefox'\n- 'internet explorer'\n- 'ie' (alias for 'internet explorer')\n- 'MicrosoftEdge'\n- 'edge' (alias for 'MicrosoftEdge')\n",
						"tags": [
							{
								"tag": "default",
								"text": "[ 'chrome' ]\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/SeleniumTunnel.ts",
							"line": 91,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "DriverDescriptor"
						}
					},
					"implementationOf": {
						"type": "reference",
						"name": "SeleniumProperties.drivers"
					}
				},
				{
					"id": 479,
					"name": "environmentUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The URL of a service that provides a list of environments supported by\nthe tunnel."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 31,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 666,
						"name": "Tunnel.environmentUrl"
					}
				},
				{
					"id": 484,
					"name": "hostname",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The host on which a WebDriver client can access the service provided by\nthe tunnel. This may or may not be the host where the tunnel application\nis running."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 75,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 673,
						"name": "Tunnel.hostname"
					},
					"implementationOf": {
						"type": "reference",
						"name": "SeleniumProperties.hostname"
					}
				},
				{
					"id": 534,
					"name": "listenersMap",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/Evented.d.ts",
							"line": 4,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "reference",
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "string"
												}
											],
											"name": "EventObject"
										}
									],
									"name": "EventedCallback"
								}
							}
						],
						"name": "Map"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 743,
						"name": "Tunnel.listenersMap"
					}
				},
				{
					"id": 485,
					"name": "pathname",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The path that a WebDriver client should use to access the service\nprovided by the tunnel."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 81,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 674,
						"name": "Tunnel.pathname"
					},
					"implementationOf": {
						"type": "reference",
						"name": "SeleniumProperties.pathname"
					}
				},
				{
					"id": 486,
					"name": "platform",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The operating system the tunnel will run on. This information is\nautomatically retrieved for the current system at runtime."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 87,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 675,
						"name": "Tunnel.platform"
					},
					"implementationOf": {
						"type": "reference",
						"name": "SeleniumProperties.platform"
					}
				},
				{
					"id": 487,
					"name": "port",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The local port where the WebDriver server should be exposed by the\ntunnel. This is typed as a string for Url compatibility, but should be a\nnumber."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 94,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 676,
						"name": "Tunnel.port"
					},
					"implementationOf": {
						"type": "reference",
						"name": "SeleniumProperties.port"
					}
				},
				{
					"id": 488,
					"name": "protocol",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The protocol (e.g., 'http') that a WebDriver client should use to access\nthe service provided by the tunnel."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 100,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 677,
						"name": "Tunnel.protocol"
					},
					"implementationOf": {
						"type": "reference",
						"name": "SeleniumProperties.protocol"
					}
				},
				{
					"id": 489,
					"name": "proxy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The URL of a proxy server for the tunnel to go through. Only the\nhostname, port, and auth are used."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 106,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 678,
						"name": "Tunnel.proxy"
					},
					"implementationOf": {
						"type": "reference",
						"name": "SeleniumProperties.proxy"
					}
				},
				{
					"id": 444,
					"name": "seleniumArgs",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Additional arguments to send to the Selenium server at startup"
					},
					"sources": [
						{
							"fileName": "src/SeleniumTunnel.ts",
							"line": 49,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"implementationOf": {
						"type": "reference",
						"name": "SeleniumProperties.seleniumArgs"
					}
				},
				{
					"id": 448,
					"name": "seleniumTimeout",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Timeout in milliseconds for communicating with the Selenium server",
						"tags": [
							{
								"tag": "default",
								"text": "5000\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/SeleniumTunnel.ts",
							"line": 112,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"implementationOf": {
						"type": "reference",
						"name": "SeleniumProperties.seleniumTimeout"
					}
				},
				{
					"id": 491,
					"name": "tunnelId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "A unique identifier for the newly created tunnel."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 118,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 680,
						"name": "Tunnel.tunnelId"
					},
					"implementationOf": {
						"type": "reference",
						"name": "SeleniumProperties.tunnelId"
					}
				},
				{
					"id": 490,
					"name": "tunnelProxy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The URL of a proxy server for the tunnel to go through. Only the\nhostname, port, and auth are used.",
						"text": "This overrides the `proxy` configuration allowing independent\nconfiguration for the Tunnel binary process only.\n"
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 115,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 679,
						"name": "Tunnel.tunnelProxy"
					},
					"implementationOf": {
						"type": "reference",
						"name": "SeleniumProperties.tunnelProxy"
					}
				},
				{
					"id": 481,
					"name": "username",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The tunnel username. This will be initialized with a tunnel-specific\nenvironment variable if not specified."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 43,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 668,
						"name": "Tunnel.username"
					},
					"implementationOf": {
						"type": "reference",
						"name": "SeleniumProperties.username"
					}
				},
				{
					"id": 492,
					"name": "verbose",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Whether or not to tell the tunnel to provide verbose logging output."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 124,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 682,
						"name": "Tunnel.verbose"
					},
					"implementationOf": {
						"type": "reference",
						"name": "SeleniumProperties.verbose"
					}
				},
				{
					"id": 447,
					"name": "version",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The desired version of selenium to install.",
						"tags": [
							{
								"tag": "default",
								"text": "3.3.1\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/SeleniumTunnel.ts",
							"line": 105,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"implementationOf": {
						"type": "reference",
						"name": "SeleniumProperties.version"
					}
				},
				{
					"id": 449,
					"name": "webDriverDataUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The URL that the tunnel will attempt to download updated webdriver data\nfrom."
					},
					"sources": [
						{
							"fileName": "src/SeleniumTunnel.ts",
							"line": 118,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"defaultValue": "'https://theintern.io/digdug/resources/2/webdrivers.json'"
				},
				{
					"id": 451,
					"name": "artifact",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/SeleniumTunnel.ts",
							"line": 143,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 452,
							"name": "artifact",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 498,
					"name": "clientUrl",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "The URL that a WebDriver client should used to interact with this\nservice."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 154,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 499,
							"name": "clientUrl",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "The URL that a WebDriver client should used to interact with this\nservice."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 688,
						"name": "Tunnel.clientUrl"
					}
				},
				{
					"id": 453,
					"name": "directory",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "The directory where the tunnel software will be extracted. If the\ndirectory does not exist, it will be created. This value is set by the\ntunnel subclasses."
					},
					"sources": [
						{
							"fileName": "src/SeleniumTunnel.ts",
							"line": 148,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 454,
							"name": "directory",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 671,
						"name": "Tunnel.directory"
					}
				},
				{
					"id": 455,
					"name": "executable",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "The executable to spawn in order to create a tunnel. This value is set\nby the tunnel subclasses."
					},
					"sources": [
						{
							"fileName": "src/SeleniumTunnel.ts",
							"line": 153,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 456,
							"name": "executable",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 672,
						"name": "Tunnel.executable"
					}
				},
				{
					"id": 500,
					"name": "extraCapabilities",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "A map of additional capabilities that need to be sent to the provider\nwhen a new session is being created."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 162,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 501,
							"name": "extraCapabilities",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "A map of additional capabilities that need to be sent to the provider\nwhen a new session is being created."
							},
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 690,
						"name": "Tunnel.extraCapabilities"
					}
				},
				{
					"id": 457,
					"name": "isDownloaded",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Whether or not the tunnel software has already been downloaded."
					},
					"sources": [
						{
							"fileName": "src/SeleniumTunnel.ts",
							"line": 157,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 458,
							"name": "isDownloaded",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 692,
						"name": "Tunnel.isDownloaded"
					}
				},
				{
					"id": 502,
					"name": "isRunning",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Whether or not the tunnel is currently running."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 176,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 503,
							"name": "isRunning",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Whether or not the tunnel is currently running."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 694,
						"name": "Tunnel.isRunning"
					}
				},
				{
					"id": 504,
					"name": "isStarting",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Whether or not the tunnel is currently starting up."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 183,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 505,
							"name": "isStarting",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Whether or not the tunnel is currently starting up."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 696,
						"name": "Tunnel.isStarting"
					}
				},
				{
					"id": 506,
					"name": "isStopping",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Whether or not the tunnel is currently stopping."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 190,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 507,
							"name": "isStopping",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Whether or not the tunnel is currently stopping."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 698,
						"name": "Tunnel.isStopping"
					}
				},
				{
					"id": 459,
					"name": "url",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "The URL where the tunnel software can be downloaded."
					},
					"sources": [
						{
							"fileName": "src/SeleniumTunnel.ts",
							"line": 168,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 460,
							"name": "url",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 681,
						"name": "Tunnel.url"
					}
				},
				{
					"id": 514,
					"name": "_downloadFile",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 373,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 515,
							"name": "_downloadFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 516,
									"name": "url",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 517,
									"name": "proxy",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 518,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "DownloadProperties"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 714,
								"name": "Tunnel._downloadFile"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 713,
						"name": "Tunnel._downloadFile"
					}
				},
				{
					"id": 468,
					"name": "_getDriverConfigs",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/SeleniumTunnel.ts",
							"line": 281,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 469,
							"name": "_getDriverConfigs",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "DriverFile"
								}
							}
						}
					]
				},
				{
					"id": 470,
					"name": "_makeArgs",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/SeleniumTunnel.ts",
							"line": 304,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 471,
							"name": "_makeArgs",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates the list of command-line arguments to be passed to the spawned\ntunnel. Implementations should override this method to provide the\nappropriate command-line arguments.",
								"text": "Arguments passed to [[Tunnel._makeChild]] will be passed as-is to this\nmethod.\n"
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 719,
								"name": "Tunnel._makeArgs"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 718,
						"name": "Tunnel._makeArgs"
					}
				},
				{
					"id": 519,
					"name": "_makeChild",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 445,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 520,
							"name": "_makeChild",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a newly spawned child process for the tunnel software.\nImplementations should call this method to create the tunnel process.",
								"text": "Arguments passed to this method will be passed as-is to\n[[Tunnel._makeArgs]] and [[Tunnel._makeOptions]].\n",
								"returns": "An object containing a newly spawned Process and a Deferred that\nwill be resolved once the tunnel has started successfully.\n"
							},
							"parameters": [
								{
									"id": 521,
									"name": "executor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ChildExecutor"
									}
								},
								{
									"id": 522,
									"name": "values",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 722,
								"name": "Tunnel._makeChild"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 721,
						"name": "Tunnel._makeChild"
					}
				},
				{
					"id": 523,
					"name": "_makeOptions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 546,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 524,
							"name": "_makeOptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates the set of options to use when spawning the tunnel process.\nImplementations should override this method to provide the appropriate\noptions for the tunnel software.",
								"text": "Arguments passed to [[Tunnel._makeChild]] will be passed as-is to this\nmethod.\n",
								"returns": "A set of options matching those provided to Node.js\n`child_process.spawn`.\n"
							},
							"parameters": [
								{
									"id": 525,
									"name": "_values",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 526,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 527,
											"name": "env",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ProcessEnv"
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												527
											]
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 726,
								"name": "Tunnel._makeOptions"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 725,
						"name": "Tunnel._makeOptions"
					}
				},
				{
					"id": 528,
					"name": "_normalizeEnvironment",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 557,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 529,
							"name": "_normalizeEnvironment",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Normalizes a specific Tunnel environment descriptor to a general form. To\nbe overriden by a child implementation.",
								"returns": "a normalized environment\n"
							},
							"parameters": [
								{
									"id": 530,
									"name": "environment",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "an environment descriptor specific to the Tunnel"
									},
									"type": {
										"type": "reference",
										"name": "Object"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "NormalizedEnvironment"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 731,
								"name": "Tunnel._normalizeEnvironment"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 730,
						"name": "Tunnel._normalizeEnvironment"
					}
				},
				{
					"id": 472,
					"name": "_postDownloadFile",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/SeleniumTunnel.ts",
							"line": 332,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 473,
							"name": "_postDownloadFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Called with the response after a file download has completed"
							},
							"parameters": [
								{
									"id": 474,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								},
								{
									"id": 475,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "SeleniumDownloadOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise"
							},
							"overwrites": {
								"type": "reference",
								"id": 734,
								"name": "Tunnel._postDownloadFile"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 733,
						"name": "Tunnel._postDownloadFile"
					}
				},
				{
					"id": 476,
					"name": "_start",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/SeleniumTunnel.ts",
							"line": 340,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 477,
							"name": "_start",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "This method provides the implementation that actually starts the tunnel\nand any other logic for emitting events on the Tunnel based on data\npassed by the tunnel software.",
								"text": "The default implementation that assumes the tunnel is ready for use once\nthe child process has written to `stdout` or `stderr`. This method should\nbe reimplemented by other tunnel launchers to implement correct launch\ndetection logic.\n"
							},
							"parameters": [
								{
									"id": 478,
									"name": "executor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ChildExecutor"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "CancellablePromise"
							},
							"overwrites": {
								"type": "reference",
								"id": 738,
								"name": "Tunnel._start"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 737,
						"name": "Tunnel._start"
					}
				},
				{
					"id": 531,
					"name": "_stop",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 622,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 532,
							"name": "_stop",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "This method provides the implementation that actually stops the tunnel.",
								"text": "The default implementation that assumes the tunnel has been closed once\nthe child process has exited. This method should be reimplemented by\nother tunnel launchers to implement correct shutdown logic, if necessary.\n",
								"returns": "A promise that resolves once the tunnel has shut down.\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								],
								"name": "Promise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 741,
								"name": "Tunnel._stop"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 740,
						"name": "Tunnel._stop"
					}
				},
				{
					"id": 466,
					"name": "_updateWebDriverData",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/SeleniumTunnel.ts",
							"line": 237,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 467,
							"name": "_updateWebDriverData",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Load updated webdriver data.",
								"text": "This method updates the data used to configure the various webdriver config\nclasses.\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 552,
					"name": "destroy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/Evented.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 553,
							"name": "destroy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 762,
								"name": "Tunnel.destroy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 761,
						"name": "Tunnel.destroy"
					}
				},
				{
					"id": 461,
					"name": "download",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/SeleniumTunnel.ts",
							"line": 176,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 462,
							"name": "download",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Downloads and extracts the tunnel software if it is not already\ndownloaded.",
								"text": "This method can be extended by implementations to perform any necessary\npost-processing, such as setting appropriate file permissions on the\ndownloaded executable.\n"
							},
							"parameters": [
								{
									"id": 463,
									"name": "forceDownload",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							},
							"overwrites": {
								"type": "reference",
								"id": 701,
								"name": "Tunnel.download"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 700,
						"name": "Tunnel.download"
					}
				},
				{
					"id": 535,
					"name": "emit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/Evented.d.ts",
							"line": 7,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 536,
							"name": "emit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 537,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 538,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"name": "K"
										},
										"objectType": {
											"type": "reference",
											"name": "TunnelEvents"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 745,
								"name": "Tunnel.emit"
							}
						},
						{
							"id": 539,
							"name": "emit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 540,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "EventObject"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 748,
								"name": "Tunnel.emit"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 744,
						"name": "Tunnel.emit"
					}
				},
				{
					"id": 508,
					"name": "getEnvironments",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 231,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 509,
							"name": "getEnvironments",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get a list of environments available on the service.",
								"text": "This method should be overridden and use a specific implementation that\nreturns normalized environments from the service. E.g.\n\n```js\n{\n    browserName: 'firefox',\n    version: '12',\n    platform: 'windows',\n    descriptor: { <original returned environment> }\n}\n```\n",
								"returns": "An object containing the response and helper functions\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "NormalizedEnvironment"
										}
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 704,
								"name": "Tunnel.getEnvironments"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 703,
						"name": "Tunnel.getEnvironments"
					}
				},
				{
					"id": 541,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/Evented.d.ts",
							"line": 9,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 542,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 543,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 544,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "K"
									}
								},
								{
									"id": 545,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "K"
											},
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"name": "K"
												},
												"objectType": {
													"type": "reference",
													"name": "TunnelEvents"
												}
											}
										],
										"name": "EventedCallbackOrArray"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Handle"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 751,
								"name": "Tunnel.on"
							}
						},
						{
							"id": 546,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 547,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 548,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "EventObject"
											}
										],
										"name": "EventedCallbackOrArray"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Handle"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 755,
								"name": "Tunnel.on"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 750,
						"name": "Tunnel.on"
					}
				},
				{
					"id": 549,
					"name": "own",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/Evented.d.ts",
							"line": 11,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 550,
							"name": "own",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 551,
									"name": "handles",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Handle"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Handle"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Handle"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 759,
								"name": "Tunnel.own"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 758,
						"name": "Tunnel.own"
					}
				},
				{
					"id": 464,
					"name": "sendJobState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/SeleniumTunnel.ts",
							"line": 226,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 465,
							"name": "sendJobState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sends information about a job to the tunnel provider."
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							},
							"overwrites": {
								"type": "reference",
								"id": 706,
								"name": "Tunnel.sendJobState"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 705,
						"name": "Tunnel.sendJobState"
					}
				},
				{
					"id": 510,
					"name": "start",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 277,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 511,
							"name": "start",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Starts the tunnel, automatically downloading dependencies if necessary.",
								"returns": "A promise that resolves once the tunnel has been established.\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 710,
								"name": "Tunnel.start"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 709,
						"name": "Tunnel.start"
					}
				},
				{
					"id": 512,
					"name": "stop",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 334,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 513,
							"name": "stop",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Stops the tunnel.",
								"returns": "A promise that resolves to the exit code for the tunnel once it\nhas been terminated.\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								],
								"name": "Promise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 712,
								"name": "Tunnel.stop"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 711,
						"name": "Tunnel.stop"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						441
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						533,
						495,
						496,
						493,
						497,
						494,
						480,
						482,
						483,
						446,
						445,
						479,
						484,
						534,
						485,
						486,
						487,
						488,
						489,
						444,
						448,
						491,
						490,
						481,
						492,
						447,
						449
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						451,
						498,
						453,
						455,
						500,
						457,
						502,
						504,
						506,
						459
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						514,
						468,
						470,
						519,
						523,
						528,
						472,
						476,
						531,
						466,
						552,
						461,
						535,
						508,
						541,
						549,
						464,
						510,
						512
					]
				}
			],
			"sources": [
				{
					"fileName": "src/SeleniumTunnel.ts",
					"line": 44,
					"character": 21
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 662,
					"name": "Tunnel"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "SeleniumProperties"
				}
			]
		},
		{
			"id": 554,
			"name": "TestingBotTunnel",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "A TestingBot tunnel.",
				"text": "The username and accessKey properties will be initialized using\nTESTINGBOT_API_KEY and TESTINGBOT_API_SECRET.\n"
			},
			"children": [
				{
					"id": 555,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/TestingBotTunnel.ts",
							"line": 50,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 556,
							"name": "new TestingBotTunnel",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 557,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "TestingBotProperties"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 554,
								"name": "default"
							},
							"overwrites": {
								"type": "reference",
								"id": 664,
								"name": "Tunnel.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 663,
						"name": "Tunnel.constructor"
					}
				},
				{
					"id": 641,
					"name": "__typeMap__",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true,
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/Evented.d.ts",
							"line": 3,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"name": "TunnelEvents"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 742,
						"name": "Tunnel.__typeMap__"
					}
				},
				{
					"id": 599,
					"name": "_handle",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 128,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "Handle"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 685,
						"name": "Tunnel._handle"
					}
				},
				{
					"id": 600,
					"name": "_process",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 129,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "ChildProcess"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 686,
						"name": "Tunnel._process"
					}
				},
				{
					"id": 597,
					"name": "_startTask",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 126,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "CancellablePromise"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 683,
						"name": "Tunnel._startTask"
					}
				},
				{
					"id": 601,
					"name": "_state",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 130,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "stopped"
							},
							{
								"type": "literal",
								"value": "starting"
							},
							{
								"type": "literal",
								"value": "running"
							},
							{
								"type": "literal",
								"value": "stopping"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 687,
						"name": "Tunnel._state"
					}
				},
				{
					"id": 598,
					"name": "_stopTask",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 127,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								],
								"name": "Promise"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 684,
						"name": "Tunnel._stopTask"
					}
				},
				{
					"id": 583,
					"name": "accessKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The tunnel access key. This will be initialized with a tunnel-specific\nenvironment variable if not specified."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 37,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 667,
						"name": "Tunnel.accessKey"
					},
					"implementationOf": {
						"type": "reference",
						"name": "TestingBotProperties.accessKey"
					}
				},
				{
					"id": 585,
					"name": "architecture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The architecture the tunnel will run against. This information is\nautomatically retrieved for the current system at runtime."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 49,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 669,
						"name": "Tunnel.architecture"
					},
					"implementationOf": {
						"type": "reference",
						"name": "TestingBotProperties.architecture"
					}
				},
				{
					"id": 558,
					"name": "directory",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The directory where the tunnel software will be extracted. If the\ndirectory does not exist, it will be created. This value is set by the\ntunnel subclasses."
					},
					"sources": [
						{
							"fileName": "src/TestingBotTunnel.ts",
							"line": 25,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"id": 671,
						"name": "Tunnel.directory"
					},
					"implementationOf": {
						"type": "reference",
						"name": "TestingBotProperties.directory"
					}
				},
				{
					"id": 582,
					"name": "environmentUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The URL of a service that provides a list of environments supported by\nthe tunnel."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 31,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 666,
						"name": "Tunnel.environmentUrl"
					}
				},
				{
					"id": 586,
					"name": "executable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The executable to spawn in order to create a tunnel. This value is set\nby the tunnel subclasses."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 68,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 672,
						"name": "Tunnel.executable"
					},
					"implementationOf": {
						"type": "reference",
						"name": "TestingBotProperties.executable"
					}
				},
				{
					"id": 559,
					"name": "fastFailDomains",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "A list of regular expressions corresponding to domains whose connections\nshould fail immediately if the VM attempts to make a connection to them."
					},
					"sources": [
						{
							"fileName": "src/TestingBotTunnel.ts",
							"line": 31,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"implementationOf": {
						"type": "reference",
						"name": "TestingBotProperties.fastFailDomains"
					}
				},
				{
					"id": 587,
					"name": "hostname",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The host on which a WebDriver client can access the service provided by\nthe tunnel. This may or may not be the host where the tunnel application\nis running."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 75,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 673,
						"name": "Tunnel.hostname"
					},
					"implementationOf": {
						"type": "reference",
						"name": "TestingBotProperties.hostname"
					}
				},
				{
					"id": 642,
					"name": "listenersMap",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/Evented.d.ts",
							"line": 4,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "reference",
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "string"
												}
											],
											"name": "EventObject"
										}
									],
									"name": "EventedCallback"
								}
							}
						],
						"name": "Map"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 743,
						"name": "Tunnel.listenersMap"
					}
				},
				{
					"id": 560,
					"name": "logFile",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "A filename where additional logs from the tunnel should be output."
					},
					"sources": [
						{
							"fileName": "src/TestingBotTunnel.ts",
							"line": 34,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"implementationOf": {
						"type": "reference",
						"name": "TestingBotProperties.logFile"
					}
				},
				{
					"id": 588,
					"name": "pathname",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The path that a WebDriver client should use to access the service\nprovided by the tunnel."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 81,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 674,
						"name": "Tunnel.pathname"
					},
					"implementationOf": {
						"type": "reference",
						"name": "TestingBotProperties.pathname"
					}
				},
				{
					"id": 589,
					"name": "platform",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The operating system the tunnel will run on. This information is\nautomatically retrieved for the current system at runtime."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 87,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 675,
						"name": "Tunnel.platform"
					},
					"implementationOf": {
						"type": "reference",
						"name": "TestingBotProperties.platform"
					}
				},
				{
					"id": 590,
					"name": "port",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The local port where the WebDriver server should be exposed by the\ntunnel. This is typed as a string for Url compatibility, but should be a\nnumber."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 94,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 676,
						"name": "Tunnel.port"
					},
					"implementationOf": {
						"type": "reference",
						"name": "TestingBotProperties.port"
					}
				},
				{
					"id": 591,
					"name": "protocol",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The protocol (e.g., 'http') that a WebDriver client should use to access\nthe service provided by the tunnel."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 100,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 677,
						"name": "Tunnel.protocol"
					},
					"implementationOf": {
						"type": "reference",
						"name": "TestingBotProperties.protocol"
					}
				},
				{
					"id": 592,
					"name": "proxy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The URL of a proxy server for the tunnel to go through. Only the\nhostname, port, and auth are used."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 106,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 678,
						"name": "Tunnel.proxy"
					},
					"implementationOf": {
						"type": "reference",
						"name": "TestingBotProperties.proxy"
					}
				},
				{
					"id": 594,
					"name": "tunnelId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "A unique identifier for the newly created tunnel."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 118,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 680,
						"name": "Tunnel.tunnelId"
					},
					"implementationOf": {
						"type": "reference",
						"name": "TestingBotProperties.tunnelId"
					}
				},
				{
					"id": 593,
					"name": "tunnelProxy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The URL of a proxy server for the tunnel to go through. Only the\nhostname, port, and auth are used.",
						"text": "This overrides the `proxy` configuration allowing independent\nconfiguration for the Tunnel binary process only.\n"
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 115,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 679,
						"name": "Tunnel.tunnelProxy"
					},
					"implementationOf": {
						"type": "reference",
						"name": "TestingBotProperties.tunnelProxy"
					}
				},
				{
					"id": 595,
					"name": "url",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The URL where the tunnel software can be downloaded."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 121,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 681,
						"name": "Tunnel.url"
					},
					"implementationOf": {
						"type": "reference",
						"name": "TestingBotProperties.url"
					}
				},
				{
					"id": 561,
					"name": "useCompression",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Whether or not to use rabbIT compression for the tunnel connection."
					},
					"sources": [
						{
							"fileName": "src/TestingBotTunnel.ts",
							"line": 37,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"implementationOf": {
						"type": "reference",
						"name": "TestingBotProperties.useCompression"
					}
				},
				{
					"id": 562,
					"name": "useJettyProxy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Whether or not to use the default local Jetty proxy for the tunnel."
					},
					"sources": [
						{
							"fileName": "src/TestingBotTunnel.ts",
							"line": 40,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"implementationOf": {
						"type": "reference",
						"name": "TestingBotProperties.useJettyProxy"
					}
				},
				{
					"id": 563,
					"name": "useSquidProxy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Whether or not to use the default remote Squid proxy for the VM."
					},
					"sources": [
						{
							"fileName": "src/TestingBotTunnel.ts",
							"line": 43,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"implementationOf": {
						"type": "reference",
						"name": "TestingBotProperties.useSquidProxy"
					}
				},
				{
					"id": 564,
					"name": "useSsl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Whether or not to re-encrypt data encrypted by self-signed certificates."
					},
					"sources": [
						{
							"fileName": "src/TestingBotTunnel.ts",
							"line": 48,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"implementationOf": {
						"type": "reference",
						"name": "TestingBotProperties.useSsl"
					}
				},
				{
					"id": 584,
					"name": "username",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The tunnel username. This will be initialized with a tunnel-specific\nenvironment variable if not specified."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 43,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 668,
						"name": "Tunnel.username"
					},
					"implementationOf": {
						"type": "reference",
						"name": "TestingBotProperties.username"
					}
				},
				{
					"id": 596,
					"name": "verbose",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Whether or not to tell the tunnel to provide verbose logging output."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 124,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 682,
						"name": "Tunnel.verbose"
					},
					"implementationOf": {
						"type": "reference",
						"name": "TestingBotProperties.verbose"
					}
				},
				{
					"id": 565,
					"name": "auth",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "An HTTP authorization string to use when initiating connections to the\ntunnel. This value of this property is defined by Tunnel subclasses."
					},
					"sources": [
						{
							"fileName": "src/TestingBotTunnel.ts",
							"line": 74,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 566,
							"name": "auth",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 670,
						"name": "Tunnel.auth"
					}
				},
				{
					"id": 602,
					"name": "clientUrl",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "The URL that a WebDriver client should used to interact with this\nservice."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 154,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 603,
							"name": "clientUrl",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "The URL that a WebDriver client should used to interact with this\nservice."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 688,
						"name": "Tunnel.clientUrl"
					}
				},
				{
					"id": 604,
					"name": "extraCapabilities",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "A map of additional capabilities that need to be sent to the provider\nwhen a new session is being created."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 162,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 605,
							"name": "extraCapabilities",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "A map of additional capabilities that need to be sent to the provider\nwhen a new session is being created."
							},
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 690,
						"name": "Tunnel.extraCapabilities"
					}
				},
				{
					"id": 567,
					"name": "isDownloaded",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Whether or not the tunnel software has already been downloaded."
					},
					"sources": [
						{
							"fileName": "src/TestingBotTunnel.ts",
							"line": 78,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 568,
							"name": "isDownloaded",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 692,
						"name": "Tunnel.isDownloaded"
					}
				},
				{
					"id": 606,
					"name": "isRunning",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Whether or not the tunnel is currently running."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 176,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 607,
							"name": "isRunning",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Whether or not the tunnel is currently running."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 694,
						"name": "Tunnel.isRunning"
					}
				},
				{
					"id": 608,
					"name": "isStarting",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Whether or not the tunnel is currently starting up."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 183,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 609,
							"name": "isStarting",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Whether or not the tunnel is currently starting up."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 696,
						"name": "Tunnel.isStarting"
					}
				},
				{
					"id": 610,
					"name": "isStopping",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Whether or not the tunnel is currently stopping."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 190,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 611,
							"name": "isStopping",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Whether or not the tunnel is currently stopping."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 698,
						"name": "Tunnel.isStopping"
					}
				},
				{
					"id": 621,
					"name": "_downloadFile",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 373,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 622,
							"name": "_downloadFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 623,
									"name": "url",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 624,
									"name": "proxy",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 625,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "DownloadProperties"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 714,
								"name": "Tunnel._downloadFile"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 713,
						"name": "Tunnel._downloadFile"
					}
				},
				{
					"id": 569,
					"name": "_makeArgs",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/TestingBotTunnel.ts",
							"line": 84,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 570,
							"name": "_makeArgs",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates the list of command-line arguments to be passed to the spawned\ntunnel. Implementations should override this method to provide the\nappropriate command-line arguments.",
								"text": "Arguments passed to [[Tunnel._makeChild]] will be passed as-is to this\nmethod.\n"
							},
							"parameters": [
								{
									"id": 571,
									"name": "readyFile",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 719,
								"name": "Tunnel._makeArgs"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 718,
						"name": "Tunnel._makeArgs"
					}
				},
				{
					"id": 626,
					"name": "_makeChild",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 445,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 627,
							"name": "_makeChild",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a newly spawned child process for the tunnel software.\nImplementations should call this method to create the tunnel process.",
								"text": "Arguments passed to this method will be passed as-is to\n[[Tunnel._makeArgs]] and [[Tunnel._makeOptions]].\n",
								"returns": "An object containing a newly spawned Process and a Deferred that\nwill be resolved once the tunnel has started successfully.\n"
							},
							"parameters": [
								{
									"id": 628,
									"name": "executor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ChildExecutor"
									}
								},
								{
									"id": 629,
									"name": "values",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 722,
								"name": "Tunnel._makeChild"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 721,
						"name": "Tunnel._makeChild"
					}
				},
				{
					"id": 630,
					"name": "_makeOptions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 546,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 631,
							"name": "_makeOptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates the set of options to use when spawning the tunnel process.\nImplementations should override this method to provide the appropriate\noptions for the tunnel software.",
								"text": "Arguments passed to [[Tunnel._makeChild]] will be passed as-is to this\nmethod.\n",
								"returns": "A set of options matching those provided to Node.js\n`child_process.spawn`.\n"
							},
							"parameters": [
								{
									"id": 632,
									"name": "_values",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 633,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 634,
											"name": "env",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ProcessEnv"
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												634
											]
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 726,
								"name": "Tunnel._makeOptions"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 725,
						"name": "Tunnel._makeOptions"
					}
				},
				{
					"id": 579,
					"name": "_normalizeEnvironment",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/TestingBotTunnel.ts",
							"line": 251,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 580,
							"name": "_normalizeEnvironment",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Attempt to normalize a TestingBot described environment with the standard\nSelenium capabilities",
								"text": "TestingBot returns a list of environments that looks like:\n\n{\n    \"selenium_name\": \"Chrome36\",\n    \"name\": \"googlechrome\",\n    \"platform\": \"CAPITAN\",\n    \"version\":\"36\"\n}\n",
								"returns": "a normalized descriptor\n"
							},
							"parameters": [
								{
									"id": 581,
									"name": "environment",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "a TestingBot environment descriptor"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "NormalizedEnvironment"
							},
							"overwrites": {
								"type": "reference",
								"id": 731,
								"name": "Tunnel._normalizeEnvironment"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 730,
						"name": "Tunnel._normalizeEnvironment"
					}
				},
				{
					"id": 635,
					"name": "_postDownloadFile",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 564,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 636,
							"name": "_postDownloadFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Called with the response after a file download has completed"
							},
							"parameters": [
								{
									"id": 637,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								},
								{
									"id": 638,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "DownloadProperties"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 734,
								"name": "Tunnel._postDownloadFile"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 733,
						"name": "Tunnel._postDownloadFile"
					}
				},
				{
					"id": 576,
					"name": "_start",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/TestingBotTunnel.ts",
							"line": 171,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 577,
							"name": "_start",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "This method provides the implementation that actually starts the tunnel\nand any other logic for emitting events on the Tunnel based on data\npassed by the tunnel software.",
								"text": "The default implementation that assumes the tunnel is ready for use once\nthe child process has written to `stdout` or `stderr`. This method should\nbe reimplemented by other tunnel launchers to implement correct launch\ndetection logic.\n"
							},
							"parameters": [
								{
									"id": 578,
									"name": "executor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ChildExecutor"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "CancellablePromise"
							},
							"overwrites": {
								"type": "reference",
								"id": 738,
								"name": "Tunnel._start"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 737,
						"name": "Tunnel._start"
					}
				},
				{
					"id": 639,
					"name": "_stop",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 622,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 640,
							"name": "_stop",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "This method provides the implementation that actually stops the tunnel.",
								"text": "The default implementation that assumes the tunnel has been closed once\nthe child process has exited. This method should be reimplemented by\nother tunnel launchers to implement correct shutdown logic, if necessary.\n",
								"returns": "A promise that resolves once the tunnel has shut down.\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								],
								"name": "Promise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 741,
								"name": "Tunnel._stop"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 740,
						"name": "Tunnel._stop"
					}
				},
				{
					"id": 660,
					"name": "destroy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/Evented.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 661,
							"name": "destroy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 762,
								"name": "Tunnel.destroy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 761,
						"name": "Tunnel.destroy"
					}
				},
				{
					"id": 612,
					"name": "download",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 207,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 613,
							"name": "download",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Downloads and extracts the tunnel software if it is not already\ndownloaded.",
								"text": "This method can be extended by implementations to perform any necessary\npost-processing, such as setting appropriate file permissions on the\ndownloaded executable.\n",
								"returns": "A promise that resolves once the download and extraction process\nhas completed.\n"
							},
							"parameters": [
								{
									"id": 614,
									"name": "forceDownload",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Force downloading the software even if it already\nhas been downloaded."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 701,
								"name": "Tunnel.download"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 700,
						"name": "Tunnel.download"
					}
				},
				{
					"id": 643,
					"name": "emit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/Evented.d.ts",
							"line": 7,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 644,
							"name": "emit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 645,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 646,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"name": "K"
										},
										"objectType": {
											"type": "reference",
											"name": "TunnelEvents"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 745,
								"name": "Tunnel.emit"
							}
						},
						{
							"id": 647,
							"name": "emit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 648,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "EventObject"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 748,
								"name": "Tunnel.emit"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 744,
						"name": "Tunnel.emit"
					}
				},
				{
					"id": 615,
					"name": "getEnvironments",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 231,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 616,
							"name": "getEnvironments",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get a list of environments available on the service.",
								"text": "This method should be overridden and use a specific implementation that\nreturns normalized environments from the service. E.g.\n\n```js\n{\n    browserName: 'firefox',\n    version: '12',\n    platform: 'windows',\n    descriptor: { <original returned environment> }\n}\n```\n",
								"returns": "An object containing the response and helper functions\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "NormalizedEnvironment"
										}
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 704,
								"name": "Tunnel.getEnvironments"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 703,
						"name": "Tunnel.getEnvironments"
					}
				},
				{
					"id": 649,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/Evented.d.ts",
							"line": 9,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 650,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 651,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 652,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "K"
									}
								},
								{
									"id": 653,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "K"
											},
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"name": "K"
												},
												"objectType": {
													"type": "reference",
													"name": "TunnelEvents"
												}
											}
										],
										"name": "EventedCallbackOrArray"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Handle"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 751,
								"name": "Tunnel.on"
							}
						},
						{
							"id": 654,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 655,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 656,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "EventObject"
											}
										],
										"name": "EventedCallbackOrArray"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Handle"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 755,
								"name": "Tunnel.on"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 750,
						"name": "Tunnel.on"
					}
				},
				{
					"id": 657,
					"name": "own",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/Evented.d.ts",
							"line": 11,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 658,
							"name": "own",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 659,
									"name": "handles",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Handle"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Handle"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Handle"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 759,
								"name": "Tunnel.own"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 758,
						"name": "Tunnel.own"
					}
				},
				{
					"id": 572,
					"name": "sendJobState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/TestingBotTunnel.ts",
							"line": 119,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 573,
							"name": "sendJobState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sends information about a job to the tunnel provider."
							},
							"parameters": [
								{
									"id": 574,
									"name": "jobId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 575,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "JobState"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							},
							"overwrites": {
								"type": "reference",
								"id": 706,
								"name": "Tunnel.sendJobState"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 705,
						"name": "Tunnel.sendJobState"
					}
				},
				{
					"id": 617,
					"name": "start",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 277,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 618,
							"name": "start",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Starts the tunnel, automatically downloading dependencies if necessary.",
								"returns": "A promise that resolves once the tunnel has been established.\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 710,
								"name": "Tunnel.start"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 709,
						"name": "Tunnel.start"
					}
				},
				{
					"id": 619,
					"name": "stop",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 334,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 620,
							"name": "stop",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Stops the tunnel.",
								"returns": "A promise that resolves to the exit code for the tunnel once it\nhas been terminated.\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								],
								"name": "Promise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 712,
								"name": "Tunnel.stop"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 711,
						"name": "Tunnel.stop"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						555
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						641,
						599,
						600,
						597,
						601,
						598,
						583,
						585,
						558,
						582,
						586,
						559,
						587,
						642,
						560,
						588,
						589,
						590,
						591,
						592,
						594,
						593,
						595,
						561,
						562,
						563,
						564,
						584,
						596
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						565,
						602,
						604,
						567,
						606,
						608,
						610
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						621,
						569,
						626,
						630,
						579,
						635,
						576,
						639,
						660,
						612,
						643,
						615,
						649,
						657,
						572,
						617,
						619
					]
				}
			],
			"sources": [
				{
					"fileName": "src/TestingBotTunnel.ts",
					"line": 21,
					"character": 21
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 662,
					"name": "Tunnel"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "TestingBotProperties"
				}
			]
		},
		{
			"id": 662,
			"name": "Tunnel",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "A Tunnel is a mechanism for connecting to a WebDriver service provider that\nsecurely exposes local services for testing within the service provider’s\nnetwork."
			},
			"children": [
				{
					"id": 663,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 132,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 664,
							"name": "new Tunnel",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 665,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "TunnelProperties"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 662,
								"name": "default"
							},
							"overwrites": {
								"type": "reference",
								"name": "Evented<TunnelEvents, string>.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Evented<TunnelEvents, string>.constructor"
					}
				},
				{
					"id": 742,
					"name": "__typeMap__",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true,
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/Evented.d.ts",
							"line": 3,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"name": "TunnelEvents"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Evented.__typeMap__"
					}
				},
				{
					"id": 685,
					"name": "_handle",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 128,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "Handle"
							}
						]
					}
				},
				{
					"id": 686,
					"name": "_process",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 129,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "ChildProcess"
							}
						]
					}
				},
				{
					"id": 683,
					"name": "_startTask",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 126,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "CancellablePromise"
							}
						]
					}
				},
				{
					"id": 687,
					"name": "_state",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 130,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "stopped"
							},
							{
								"type": "literal",
								"value": "starting"
							},
							{
								"type": "literal",
								"value": "running"
							},
							{
								"type": "literal",
								"value": "stopping"
							}
						]
					}
				},
				{
					"id": 684,
					"name": "_stopTask",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 127,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								],
								"name": "Promise"
							}
						]
					}
				},
				{
					"id": 667,
					"name": "accessKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The tunnel access key. This will be initialized with a tunnel-specific\nenvironment variable if not specified."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 37,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"implementationOf": {
						"type": "reference",
						"name": "TunnelProperties.accessKey"
					}
				},
				{
					"id": 669,
					"name": "architecture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The architecture the tunnel will run against. This information is\nautomatically retrieved for the current system at runtime."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 49,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"implementationOf": {
						"type": "reference",
						"name": "TunnelProperties.architecture"
					}
				},
				{
					"id": 670,
					"name": "auth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "An HTTP authorization string to use when initiating connections to the\ntunnel. This value of this property is defined by Tunnel subclasses."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 55,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"implementationOf": {
						"type": "reference",
						"name": "TunnelProperties.auth"
					}
				},
				{
					"id": 671,
					"name": "directory",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The directory where the tunnel software will be extracted. If the\ndirectory does not exist, it will be created. This value is set by the\ntunnel subclasses."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 62,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"implementationOf": {
						"type": "reference",
						"name": "TunnelProperties.directory"
					}
				},
				{
					"id": 666,
					"name": "environmentUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The URL of a service that provides a list of environments supported by\nthe tunnel."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 31,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 672,
					"name": "executable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The executable to spawn in order to create a tunnel. This value is set\nby the tunnel subclasses."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 68,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"implementationOf": {
						"type": "reference",
						"name": "TunnelProperties.executable"
					}
				},
				{
					"id": 673,
					"name": "hostname",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The host on which a WebDriver client can access the service provided by\nthe tunnel. This may or may not be the host where the tunnel application\nis running."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 75,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"implementationOf": {
						"type": "reference",
						"name": "TunnelProperties.hostname"
					}
				},
				{
					"id": 743,
					"name": "listenersMap",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/Evented.d.ts",
							"line": 4,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "reference",
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "string"
												}
											],
											"name": "EventObject"
										}
									],
									"name": "EventedCallback"
								}
							}
						],
						"name": "Map"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Evented.listenersMap"
					}
				},
				{
					"id": 674,
					"name": "pathname",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The path that a WebDriver client should use to access the service\nprovided by the tunnel."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 81,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"implementationOf": {
						"type": "reference",
						"name": "TunnelProperties.pathname"
					}
				},
				{
					"id": 675,
					"name": "platform",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The operating system the tunnel will run on. This information is\nautomatically retrieved for the current system at runtime."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 87,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"implementationOf": {
						"type": "reference",
						"name": "TunnelProperties.platform"
					}
				},
				{
					"id": 676,
					"name": "port",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The local port where the WebDriver server should be exposed by the\ntunnel. This is typed as a string for Url compatibility, but should be a\nnumber."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 94,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"implementationOf": {
						"type": "reference",
						"name": "TunnelProperties.port"
					}
				},
				{
					"id": 677,
					"name": "protocol",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The protocol (e.g., 'http') that a WebDriver client should use to access\nthe service provided by the tunnel."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 100,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"implementationOf": {
						"type": "reference",
						"name": "TunnelProperties.protocol"
					}
				},
				{
					"id": 678,
					"name": "proxy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The URL of a proxy server for the tunnel to go through. Only the\nhostname, port, and auth are used."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 106,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"implementationOf": {
						"type": "reference",
						"name": "TunnelProperties.proxy"
					}
				},
				{
					"id": 680,
					"name": "tunnelId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "A unique identifier for the newly created tunnel."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 118,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"implementationOf": {
						"type": "reference",
						"name": "TunnelProperties.tunnelId"
					}
				},
				{
					"id": 679,
					"name": "tunnelProxy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The URL of a proxy server for the tunnel to go through. Only the\nhostname, port, and auth are used.",
						"text": "This overrides the `proxy` configuration allowing independent\nconfiguration for the Tunnel binary process only.\n"
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 115,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"implementationOf": {
						"type": "reference",
						"name": "TunnelProperties.tunnelProxy"
					}
				},
				{
					"id": 681,
					"name": "url",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The URL where the tunnel software can be downloaded."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 121,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"implementationOf": {
						"type": "reference",
						"name": "TunnelProperties.url"
					}
				},
				{
					"id": 668,
					"name": "username",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The tunnel username. This will be initialized with a tunnel-specific\nenvironment variable if not specified."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 43,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"implementationOf": {
						"type": "reference",
						"name": "TunnelProperties.username"
					}
				},
				{
					"id": 682,
					"name": "verbose",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Whether or not to tell the tunnel to provide verbose logging output."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 124,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"implementationOf": {
						"type": "reference",
						"name": "TunnelProperties.verbose"
					}
				},
				{
					"id": 688,
					"name": "clientUrl",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "The URL that a WebDriver client should used to interact with this\nservice."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 154,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 689,
							"name": "clientUrl",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "The URL that a WebDriver client should used to interact with this\nservice."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 690,
					"name": "extraCapabilities",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "A map of additional capabilities that need to be sent to the provider\nwhen a new session is being created."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 162,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 691,
							"name": "extraCapabilities",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "A map of additional capabilities that need to be sent to the provider\nwhen a new session is being created."
							},
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					]
				},
				{
					"id": 692,
					"name": "isDownloaded",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Whether or not the tunnel software has already been downloaded."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 169,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 693,
							"name": "isDownloaded",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Whether or not the tunnel software has already been downloaded."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 694,
					"name": "isRunning",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Whether or not the tunnel is currently running."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 176,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 695,
							"name": "isRunning",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Whether or not the tunnel is currently running."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 696,
					"name": "isStarting",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Whether or not the tunnel is currently starting up."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 183,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 697,
							"name": "isStarting",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Whether or not the tunnel is currently starting up."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 698,
					"name": "isStopping",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Whether or not the tunnel is currently stopping."
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 190,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 699,
							"name": "isStopping",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Whether or not the tunnel is currently stopping."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 713,
					"name": "_downloadFile",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 373,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 714,
							"name": "_downloadFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 715,
									"name": "url",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 716,
									"name": "proxy",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 717,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "DownloadProperties"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 718,
					"name": "_makeArgs",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 431,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 719,
							"name": "_makeArgs",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates the list of command-line arguments to be passed to the spawned\ntunnel. Implementations should override this method to provide the\nappropriate command-line arguments.",
								"text": "Arguments passed to [[Tunnel._makeChild]] will be passed as-is to this\nmethod.\n",
								"returns": "A list of command-line arguments.\n"
							},
							"parameters": [
								{
									"id": 720,
									"name": "_values",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					]
				},
				{
					"id": 721,
					"name": "_makeChild",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 445,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 722,
							"name": "_makeChild",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a newly spawned child process for the tunnel software.\nImplementations should call this method to create the tunnel process.",
								"text": "Arguments passed to this method will be passed as-is to\n[[Tunnel._makeArgs]] and [[Tunnel._makeOptions]].\n",
								"returns": "An object containing a newly spawned Process and a Deferred that\nwill be resolved once the tunnel has started successfully.\n"
							},
							"parameters": [
								{
									"id": 723,
									"name": "executor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ChildExecutor"
									}
								},
								{
									"id": 724,
									"name": "values",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 725,
					"name": "_makeOptions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 546,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 726,
							"name": "_makeOptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates the set of options to use when spawning the tunnel process.\nImplementations should override this method to provide the appropriate\noptions for the tunnel software.",
								"text": "Arguments passed to [[Tunnel._makeChild]] will be passed as-is to this\nmethod.\n",
								"returns": "A set of options matching those provided to Node.js\n`child_process.spawn`.\n"
							},
							"parameters": [
								{
									"id": 727,
									"name": "_values",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 728,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 729,
											"name": "env",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ProcessEnv"
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												729
											]
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 730,
					"name": "_normalizeEnvironment",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 557,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 731,
							"name": "_normalizeEnvironment",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Normalizes a specific Tunnel environment descriptor to a general form. To\nbe overriden by a child implementation.",
								"returns": "a normalized environment\n"
							},
							"parameters": [
								{
									"id": 732,
									"name": "environment",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "an environment descriptor specific to the Tunnel"
									},
									"type": {
										"type": "reference",
										"name": "Object"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "NormalizedEnvironment"
							}
						}
					]
				},
				{
					"id": 733,
					"name": "_postDownloadFile",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 564,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 734,
							"name": "_postDownloadFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Called with the response after a file download has completed"
							},
							"parameters": [
								{
									"id": 735,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								},
								{
									"id": 736,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "DownloadProperties"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 737,
					"name": "_start",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 593,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 738,
							"name": "_start",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "This method provides the implementation that actually starts the tunnel\nand any other logic for emitting events on the Tunnel based on data\npassed by the tunnel software.",
								"text": "The default implementation that assumes the tunnel is ready for use once\nthe child process has written to `stdout` or `stderr`. This method should\nbe reimplemented by other tunnel launchers to implement correct launch\ndetection logic.\n",
								"returns": "An object containing a reference to the child process, and a\nDeferred that is resolved once the tunnel is ready for use. Normally this\nwill be the object returned from a call to [[Tunnel._makeChild]].\n"
							},
							"parameters": [
								{
									"id": 739,
									"name": "executor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ChildExecutor"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 740,
					"name": "_stop",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 622,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 741,
							"name": "_stop",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "This method provides the implementation that actually stops the tunnel.",
								"text": "The default implementation that assumes the tunnel has been closed once\nthe child process has exited. This method should be reimplemented by\nother tunnel launchers to implement correct shutdown logic, if necessary.\n",
								"returns": "A promise that resolves once the tunnel has shut down.\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 761,
					"name": "destroy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/Evented.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 762,
							"name": "destroy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Evented.destroy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Evented.destroy"
					}
				},
				{
					"id": 700,
					"name": "download",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 207,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 701,
							"name": "download",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Downloads and extracts the tunnel software if it is not already\ndownloaded.",
								"text": "This method can be extended by implementations to perform any necessary\npost-processing, such as setting appropriate file permissions on the\ndownloaded executable.\n",
								"returns": "A promise that resolves once the download and extraction process\nhas completed.\n"
							},
							"parameters": [
								{
									"id": 702,
									"name": "forceDownload",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Force downloading the software even if it already\nhas been downloaded."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 744,
					"name": "emit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/Evented.d.ts",
							"line": 7,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 745,
							"name": "emit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 746,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 747,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"name": "K"
										},
										"objectType": {
											"type": "reference",
											"name": "TunnelEvents"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Evented.emit"
							}
						},
						{
							"id": 748,
							"name": "emit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 749,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "EventObject"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Evented.emit"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Evented.emit"
					}
				},
				{
					"id": 703,
					"name": "getEnvironments",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 231,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 704,
							"name": "getEnvironments",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get a list of environments available on the service.",
								"text": "This method should be overridden and use a specific implementation that\nreturns normalized environments from the service. E.g.\n\n```js\n{\n    browserName: 'firefox',\n    version: '12',\n    platform: 'windows',\n    descriptor: { <original returned environment> }\n}\n```\n",
								"returns": "An object containing the response and helper functions\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "NormalizedEnvironment"
										}
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 750,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/Evented.d.ts",
							"line": 9,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 751,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 752,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 753,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "K"
									}
								},
								{
									"id": 754,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "K"
											},
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"name": "K"
												},
												"objectType": {
													"type": "reference",
													"name": "TunnelEvents"
												}
											}
										],
										"name": "EventedCallbackOrArray"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Handle"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Evented.on"
							}
						},
						{
							"id": 755,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 756,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 757,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "EventObject"
											}
										],
										"name": "EventedCallbackOrArray"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Handle"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Evented.on"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Evented.on"
					}
				},
				{
					"id": 758,
					"name": "own",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/Evented.d.ts",
							"line": 11,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 759,
							"name": "own",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 760,
									"name": "handles",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Handle"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Handle"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Handle"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Evented.own"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Evented.own"
					}
				},
				{
					"id": 705,
					"name": "sendJobState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 268,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 706,
							"name": "sendJobState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sends information about a job to the tunnel provider.",
								"returns": "A promise that resolves once the job state request is complete.\n"
							},
							"parameters": [
								{
									"id": 707,
									"name": "_jobId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 708,
									"name": "_data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "JobState"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 709,
					"name": "start",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 277,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 710,
							"name": "start",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Starts the tunnel, automatically downloading dependencies if necessary.",
								"returns": "A promise that resolves once the tunnel has been established.\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 711,
					"name": "stop",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Tunnel.ts",
							"line": 334,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 712,
							"name": "stop",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Stops the tunnel.",
								"returns": "A promise that resolves to the exit code for the tunnel once it\nhas been terminated.\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								],
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						663
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						742,
						685,
						686,
						683,
						687,
						684,
						667,
						669,
						670,
						671,
						666,
						672,
						673,
						743,
						674,
						675,
						676,
						677,
						678,
						680,
						679,
						681,
						668,
						682
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						688,
						690,
						692,
						694,
						696,
						698
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						713,
						718,
						721,
						725,
						730,
						733,
						737,
						740,
						761,
						700,
						744,
						703,
						750,
						758,
						705,
						709,
						711
					]
				}
			],
			"sources": [
				{
					"fileName": "src/Tunnel.ts",
					"line": 23,
					"character": 21
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"name": "TunnelEvents"
						},
						{
							"type": "intrinsic",
							"name": "string"
						}
					],
					"name": "Evented"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 1,
					"name": "BrowserStackTunnel"
				},
				{
					"type": "reference",
					"id": 110,
					"name": "CrossBrowserTestingTunnel"
				},
				{
					"type": "reference",
					"id": 216,
					"name": "NullTunnel"
				},
				{
					"type": "reference",
					"id": 314,
					"name": "SauceLabsTunnel"
				},
				{
					"type": "reference",
					"id": 440,
					"name": "SeleniumTunnel"
				},
				{
					"type": "reference",
					"id": 554,
					"name": "TestingBotTunnel"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "TunnelProperties"
				}
			]
		}
	],
	"groups": [
		{
			"title": "Classes",
			"kind": 128,
			"children": [
				1,
				110,
				216,
				314,
				440,
				554,
				662
			]
		}
	],
	"sources": [
		{
			"fileName": "src/index.ts",
			"line": 1,
			"character": 0
		}
	]
}